"use strict";exports.id=229,exports.ids=[229],exports.modules={4027:(t,e,n)=>{n.d(e,{n:()=>y});var r=n(629),a=n.n(r),o=n(5315),i=n.n(o),s=n(9744),c=n.n(s),l=n(6314);let u=["## Purpose","## ✅ Objectives","## \uD83D\uDD27 Tasks","## \uD83E\uDDFE Execution Log","## \uD83E\uDDE0 Memory Trace"],d=i().resolve(__dirname,"../../"),m=i().join(d,"runtime","logs","mutation-log.json"),$=i().join(d,"runtime","logs","mutation-errors.json");async function p(t){let e=await a().readFile(t,"utf-8");return c()(e,l.G)}async function g(t,e){let n=c().stringify(e.content,e.data);await a().writeFile(t,n,"utf-8")}async function f(t){let e={timestamp:new Date().toISOString(),...t},n=[];try{let t=await a().readFile(m,"utf-8");n=JSON.parse(t)}catch(t){}n.push(e);try{await a().mkdir(i().dirname(m),{recursive:!0}),await a().writeFile(m,JSON.stringify(n,null,2),"utf-8")}catch(t){console.log("Mutation logged (file logging failed):",e)}}async function h(t){let e={timestamp:new Date().toISOString(),...t},n=[];try{let t=await a().readFile($,"utf-8");n=JSON.parse(t)}catch(t){}n.push(e);try{await a().mkdir(i().dirname($),{recursive:!0}),await a().writeFile($,JSON.stringify(n,null,2),"utf-8")}catch(t){console.error("Error logged (file logging failed):",e)}}let y={async patchFrontmatter(t,e,n){let r=await p(t);r.data,r.data={...r.data,...e},await g(t,r),await f({filePath:t,mutationType:"PATCH_FRONTMATTER",summary:`Updated frontmatter. Changes: ${JSON.stringify(e)}`,loopOrTaskUuid:n})},async appendToSection(t,e,n,r){let a=await p(t);if(RegExp(`(^${e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),!a.content.includes(e))throw Error(`Validation Error: Section "${e}" not found in ${t}.`);a.content=a.content.replace(e,`${e}
${n}`),await g(t,a),await f({filePath:t,mutationType:"APPEND_TO_SECTION",summary:`Appended content to section "${e}".`,loopOrTaskUuid:r})},async replaceInSection(t,e,n,r,a){let o=await p(t),i=RegExp(`(^${e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),s=o.content.match(i);if(!s){let n=Error(`Validation Error: Section "${e}" not found in ${t}.`);throw await h({filePath:t,mutationType:"REPLACE_IN_SECTION",error:n.message,loopOrTaskUuid:a}),n}let c=s[0],l=c.replace(n,r);c!==l&&(o.content=o.content.replace(c,l),await g(t,o),await f({filePath:t,mutationType:"REPLACE_IN_SECTION",summary:`Replaced content in section "${e}".`,loopOrTaskUuid:a}))},async appendToLog(t,e){let n=await p(t),r="## \uD83E\uDDFE Execution Log";if(!n.content.includes(r))throw Error(`Validation Error: Section "${r}" not found in ${t}.`);let a=`- ${e.timestamp}: ${"ora"===e.actor?"\uD83E\uDD16":"\uD83D\uDC64"} ${e.action}`,o=RegExp(`(${r.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),i=n.content.match(o);if(!i)throw Error(`Validation Error: Section "${r}" malformed in ${t}.`);let s=i[0],c=s.endsWith("\n")?`${s}${a}
`:`${s}
${a}
`;n.content=n.content.replace(s,c),await g(t,n),await f({filePath:t,mutationType:"APPEND_TO_LOG",summary:`Appended log entry: ${e.action}`})},async validateMarkdownSchema(t,e=u){let n;try{n=await a().readFile(t,"utf-8")}catch(e){throw Error(`Validation Error: File not found or unreadable at ${t}`)}let r=[],o={};for(let t of e){let e=RegExp(`^${t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}`,"gm"),a=n.match(e),i=a?a.length:0;o[t]=i,0===i?r.push(`Missing required section: "${t}"`):i>1&&r.push(`Duplicated section: "${t}" (found ${i} times)`)}for(let t of n.match(/^## .+$/gm)||[])if(e.includes(t)){let e=RegExp(`(^${t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),r=n.match(e);r&&(r[0].trim(),t.trim())}if(r.length>0)throw Error(`Validation Error in ${t}:
${r.join("\n")}`)},async dryRunMutation(t,e){let n,r;try{n=await a().readFile(t,"utf-8")}catch(e){throw Error(`Dry Run Error: Cannot read file at ${t}`)}try{r=e(n)}catch(t){throw Error(`Dry Run Error: Mutation function failed: ${t}`)}let o=n===r?void 0:"Content changed";return{preImage:n,postImage:r,diff:o}}}},4810:(t,e,n)=>{n.d(e,{$7:()=>f,_b:()=>g,$Z:()=>y,A1:()=>h});var r=n(629),a=n.n(r),o=n(5315),i=n.n(o),s=n(4770);let c={randomUUID:s.randomUUID},l=new Uint8Array(256),u=l.length,d=[];for(let t=0;t<256;++t)d.push((t+256).toString(16).slice(1));let m=function(t,e,n){if(c.randomUUID&&!e&&!t)return c.randomUUID();let r=(t=t||{}).random??t.rng?.()??(u>l.length-16&&((0,s.randomFillSync)(l),u=0),l.slice(u,u+=16));if(r.length<16)throw Error("Random bytes length must be >= 16");if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e){if((n=n||0)<0||n+16>e.length)throw RangeError(`UUID byte range ${n}:${n+15} is out of buffer bounds`);for(let t=0;t<16;++t)e[n+t]=r[t];return e}return function(t,e=0){return(d[t[e+0]]+d[t[e+1]]+d[t[e+2]]+d[t[e+3]]+"-"+d[t[e+4]]+d[t[e+5]]+"-"+d[t[e+6]]+d[t[e+7]]+"-"+d[t[e+8]]+d[t[e+9]]+"-"+d[t[e+10]]+d[t[e+11]]+d[t[e+12]]+d[t[e+13]]+d[t[e+14]]+d[t[e+15]]).toLowerCase()}(r)},$=i().resolve(process.cwd(),"../../.."),p=i().join($,"runtime","interactions");async function g(t,e,n,r,o,s={}){try{var c;await a().mkdir(p,{recursive:!0});let l=`interaction-${Date.now()}-${m().slice(0,8)}`,u=new Date,d=u.toISOString(),{contextStr:$,tags:g}=function(t,e,n){let{contextType:r,contextId:a,action:o}=e,i=a||"unknown",s=["interaction"];return r&&(s.push(r),"loop"===r&&a?(i=a,s.push("loop-interaction")):"task"===r&&a?(i=a,s.push("task-management")):"phase"===r&&a&&(i=a,s.push("phase-interaction"))),s.push(t),o&&s.push(o),s.push(`${n}-action`),{contextStr:i,tags:s}}(t,s,r),f=function(t,e){let n=t.toISOString().replace(/T/,"-").replace(/:/g,"").replace(/\..+/,"").slice(0,15),r=e?`-${e}`:"";return`interaction-${n}${r}.md`}(u,s.contextId),h=(c={actor:r,source:o,context:$,tags:g,message:e,outcome:n},`---
uuid: ${l}
timestamp: ${d}
actor: ${c.actor}
source: ${c.source}
context: ${c.context}
tags: [${c.tags.join(", ")}]
---

## 💬 Message

${c.message}

## 🔄 Outcome

${c.outcome}
`),y=i().join(p,f);return await a().writeFile(y,h,"utf-8"),console.log(`✅ Interaction logged: ${l} -> ${f}`),l}catch(t){throw console.error("❌ Failed to log interaction:",t),t}}async function f(t,e,n,r,a){return g("chat-message",`Chat message in ${n} ${r}: "${t.substring(0,100)}${t.length>100?"...":""}"`,`Message successfully posted to ${a||`${n}/${r}`} chat history.`,e,"chat",{contextType:n,contextId:r,filePath:a,action:"post-message"})}async function h(t,e,n,r,a){return g("task-management",`Task ${t}: "${e.substring(0,100)}${e.length>100?"...":""}"`,r,n,"ui",{contextType:"task",contextId:a,action:`task-${t}`})}async function y(t,e,n,r,a){let o=`${"memory"===t?"Memory trace":"Execution log"} entry: "${e.substring(0,100)}${e.length>100?"...":""}"`,i=`Successfully logged to ${t} section in ${a||`${n}/${r}`}.`;return g(`${t}-log`,o,i,"ora","api",{contextType:n,contextId:r,filePath:a,action:`log-${t}`})}},7038:(t,e,n)=>{n.d(e,{O:()=>s,Y:()=>i});var r=n(5315),a=n.n(r);let o=a().resolve(process.cwd(),"../../../runtime/workstreams/roadmap/workstream_plan.md"),i=t=>{let e=[],n=null,r=t.split("\n");for(let t=0;t<r.length;t++){let i=r[t].trim(),s=i.match(/^### (User-Defined Tasks|Ora-Suggested Tasks)/);if(s){n=s[1];continue}if(!n)continue;let c=i.match(/^- \[([ x-])\] (.*)/);if(c){let[i,s,l]=c,u={description:l.trim(),status:"x"===s?"done":"pending",section:n,id:Buffer.from(l.trim()).toString("base64"),added_by:"user",source:`plan: ${a().basename(o)}`},d=t+1;for(;d<r.length;){let t=r[d].trim();if(t.startsWith("- [")||t.startsWith("###")||"---"===t)break;let e=t.match(/`([^`]+?):\s*([^`]+?)`/);if(e){let[t,n,r]=e;u[n.trim()]=r.trim()}else t&&(u.description+="\n"+r[d]);d++}"promoted"===u.status&&(u.status="promoted"),e.push(u),t=d-1}}return e},s=(t,e)=>{let n=t.filter(t=>"User-Defined Tasks"===t.section&&"rejected"!==t.status),r=t.filter(t=>"Ora-Suggested Tasks"===t.section&&"rejected"!==t.status),a=t=>{let e="done"===t.status?"[x]":"[ ]",n=`- ${e} ${t.description}
`;return n+=`  \`added_by: ${t.added_by}\`
  \`source: ${t.source}\`
`,t.context&&(n+=`  \`context: ${t.context}\`
`),t.promoted_to&&(n+=`  \`promoted_to: ${t.promoted_to}\`
`),"promoted"===t.status&&(n+="  `status: promoted`\n"),n},o=e.match(/---[\\s\\S]*?---/);return(o?o[0]:"")+"\n\n"+(`### User-Defined Tasks

`+n.map(a).join("\n")+`
---

`+`### Ora-Suggested Tasks

`)+r.map(a).join("\n")}},6314:(t,e,n)=>{n.d(e,{G:()=>a});var r=n(3366);let a={engines:{yaml:{parse:t=>r.ZP.load(t,{schema:r.ZP.JSON_SCHEMA}),stringify:t=>r.ZP.dump(t)}}}}};
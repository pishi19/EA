"use strict";(()=>{var t={};t.id=152,t.ids=[152],t.modules={399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:t=>{t.exports=require("buffer")},4770:t=>{t.exports=require("crypto")},2048:t=>{t.exports=require("fs")},629:t=>{t.exports=require("fs/promises")},5315:t=>{t.exports=require("path")},4745:(t,e,n)=>{n.r(e),n.d(e,{originalPathname:()=>x,patchFetch:()=>D,requestAsyncStorage:()=>y,routeModule:()=>h,serverHooks:()=>E,staticGenerationAsyncStorage:()=>w});var r={};n.r(r),n.d(r,{POST:()=>f});var o=n(9303),a=n(8716),i=n(3131),s=n(7070),c=n(629),u=n.n(c),l=n(5315),p=n.n(l),d=n(4027),m=n(4810);let g=p().resolve(process.cwd(),"../../.."),$=p().join(g,"runtime");async function f(t){let{contextType:e,contextId:n,message:r,section:o,filePath:a}=await t.json();if(!e||!n||!r||!o)return s.NextResponse.json({message:"Missing required parameters"},{status:400});if("memory"!==o&&"execution"!==o)return s.NextResponse.json({message:'Invalid section. Must be "memory" or "execution"'},{status:400});try{let t=function(t,e,n){if(n)return p().join(g,n);switch(t){case"loop":return p().join($,"loops",`${e}.md`);case"task":return p().join($,"tasks",`${e}.md`);case"phase":return p().join($,"phases",e,"phase.md");default:throw Error(`Invalid context type: ${t}`)}}(e,n,a),i="memory"===o?"## \uD83E\uDDE0 Memory Trace":"## \uD83E\uDDFE Execution Log",c=function(t,e){let n=new Date().toISOString().split("T")[0];return"memory"===e?`
- ${n}: 🤖 GPT Response logged: ${t.substring(0,100)}${t.length>100?"...":""}
`:`
- ${n}: 🤖 GPT Response: ${t}
`}(r,o);try{await d.n.appendToSection(t,i,c,n)}catch(e){if(e instanceof Error&&e.message.includes(`Section "${i}" not found`)){let e=await u().readFile(t,"utf-8");await u().writeFile(t,e+"\n\n"+i+"\n"+c,"utf-8")}else throw e}try{await (0,m.$Z)(o,r,e,n,a)}catch(t){console.error("Failed to log memory/execution interaction:",t)}return s.NextResponse.json({success:!0,message:`Successfully logged to ${o} section`},{status:200})}catch(t){return console.error("Failed to log message to section:",t),s.NextResponse.json({message:`Failed to log to ${o} section: ${t instanceof Error?t.message:"Unknown error"}`},{status:500})}}let h=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/contextual-chat/log/route",pathname:"/api/contextual-chat/log",filename:"route",bundlePath:"app/api/contextual-chat/log/route"},resolvedPagePath:"/Users/air/Projects/ora-system/src/ui/react-app/app/api/contextual-chat/log/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:y,staticGenerationAsyncStorage:w,serverHooks:E}=h,x="/api/contextual-chat/log/route";function D(){return(0,i.patchFetch)({serverHooks:E,staticGenerationAsyncStorage:w})}},4027:(t,e,n)=>{n.d(e,{n:()=>y});var r=n(629),o=n.n(r),a=n(5315),i=n.n(a),s=n(9744),c=n.n(s),u=n(6314);let l=["## Purpose","## ✅ Objectives","## \uD83D\uDD27 Tasks","## \uD83E\uDDFE Execution Log","## \uD83E\uDDE0 Memory Trace"],p=i().resolve(__dirname,"../../"),d=i().join(p,"runtime","logs","mutation-log.json"),m=i().join(p,"runtime","logs","mutation-errors.json");async function g(t){let e=await o().readFile(t,"utf-8");return c()(e,u.G)}async function $(t,e){let n=c().stringify(e.content,e.data);await o().writeFile(t,n,"utf-8")}async function f(t){let e={timestamp:new Date().toISOString(),...t},n=[];try{let t=await o().readFile(d,"utf-8");n=JSON.parse(t)}catch(t){}n.push(e);try{await o().mkdir(i().dirname(d),{recursive:!0}),await o().writeFile(d,JSON.stringify(n,null,2),"utf-8")}catch(t){console.log("Mutation logged (file logging failed):",e)}}async function h(t){let e={timestamp:new Date().toISOString(),...t},n=[];try{let t=await o().readFile(m,"utf-8");n=JSON.parse(t)}catch(t){}n.push(e);try{await o().mkdir(i().dirname(m),{recursive:!0}),await o().writeFile(m,JSON.stringify(n,null,2),"utf-8")}catch(t){console.error("Error logged (file logging failed):",e)}}let y={async patchFrontmatter(t,e,n){let r=await g(t);r.data,r.data={...r.data,...e},await $(t,r),await f({filePath:t,mutationType:"PATCH_FRONTMATTER",summary:`Updated frontmatter. Changes: ${JSON.stringify(e)}`,loopOrTaskUuid:n})},async appendToSection(t,e,n,r){let o=await g(t);if(RegExp(`(^${e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),!o.content.includes(e))throw Error(`Validation Error: Section "${e}" not found in ${t}.`);o.content=o.content.replace(e,`${e}
${n}`),await $(t,o),await f({filePath:t,mutationType:"APPEND_TO_SECTION",summary:`Appended content to section "${e}".`,loopOrTaskUuid:r})},async replaceInSection(t,e,n,r,o){let a=await g(t),i=RegExp(`(^${e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),s=a.content.match(i);if(!s){let n=Error(`Validation Error: Section "${e}" not found in ${t}.`);throw await h({filePath:t,mutationType:"REPLACE_IN_SECTION",error:n.message,loopOrTaskUuid:o}),n}let c=s[0],u=c.replace(n,r);c!==u&&(a.content=a.content.replace(c,u),await $(t,a),await f({filePath:t,mutationType:"REPLACE_IN_SECTION",summary:`Replaced content in section "${e}".`,loopOrTaskUuid:o}))},async appendToLog(t,e){let n=await g(t),r="## \uD83E\uDDFE Execution Log";if(!n.content.includes(r))throw Error(`Validation Error: Section "${r}" not found in ${t}.`);let o=`- ${e.timestamp}: ${"ora"===e.actor?"\uD83E\uDD16":"\uD83D\uDC64"} ${e.action}`,a=RegExp(`(${r.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),i=n.content.match(a);if(!i)throw Error(`Validation Error: Section "${r}" malformed in ${t}.`);let s=i[0],c=s.endsWith("\n")?`${s}${o}
`:`${s}
${o}
`;n.content=n.content.replace(s,c),await $(t,n),await f({filePath:t,mutationType:"APPEND_TO_LOG",summary:`Appended log entry: ${e.action}`})},async validateMarkdownSchema(t,e=l){let n;try{n=await o().readFile(t,"utf-8")}catch(e){throw Error(`Validation Error: File not found or unreadable at ${t}`)}let r=[],a={};for(let t of e){let e=RegExp(`^${t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}`,"gm"),o=n.match(e),i=o?o.length:0;a[t]=i,0===i?r.push(`Missing required section: "${t}"`):i>1&&r.push(`Duplicated section: "${t}" (found ${i} times)`)}for(let t of n.match(/^## .+$/gm)||[])if(e.includes(t)){let e=RegExp(`(^${t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),r=n.match(e);r&&(r[0].trim(),t.trim())}if(r.length>0)throw Error(`Validation Error in ${t}:
${r.join("\n")}`)},async dryRunMutation(t,e){let n,r;try{n=await o().readFile(t,"utf-8")}catch(e){throw Error(`Dry Run Error: Cannot read file at ${t}`)}try{r=e(n)}catch(t){throw Error(`Dry Run Error: Mutation function failed: ${t}`)}let a=n===r?void 0:"Content changed";return{preImage:n,postImage:r,diff:a}}}},4810:(t,e,n)=>{n.d(e,{$7:()=>f,_b:()=>$,$Z:()=>y,A1:()=>h});var r=n(629),o=n.n(r),a=n(5315),i=n.n(a),s=n(4770);let c={randomUUID:s.randomUUID},u=new Uint8Array(256),l=u.length,p=[];for(let t=0;t<256;++t)p.push((t+256).toString(16).slice(1));let d=function(t,e,n){if(c.randomUUID&&!e&&!t)return c.randomUUID();let r=(t=t||{}).random??t.rng?.()??(l>u.length-16&&((0,s.randomFillSync)(u),l=0),u.slice(l,l+=16));if(r.length<16)throw Error("Random bytes length must be >= 16");if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e){if((n=n||0)<0||n+16>e.length)throw RangeError(`UUID byte range ${n}:${n+15} is out of buffer bounds`);for(let t=0;t<16;++t)e[n+t]=r[t];return e}return function(t,e=0){return(p[t[e+0]]+p[t[e+1]]+p[t[e+2]]+p[t[e+3]]+"-"+p[t[e+4]]+p[t[e+5]]+"-"+p[t[e+6]]+p[t[e+7]]+"-"+p[t[e+8]]+p[t[e+9]]+"-"+p[t[e+10]]+p[t[e+11]]+p[t[e+12]]+p[t[e+13]]+p[t[e+14]]+p[t[e+15]]).toLowerCase()}(r)},m=i().resolve(process.cwd(),"../../.."),g=i().join(m,"runtime","interactions");async function $(t,e,n,r,a,s={}){try{var c;await o().mkdir(g,{recursive:!0});let u=`interaction-${Date.now()}-${d().slice(0,8)}`,l=new Date,p=l.toISOString(),{contextStr:m,tags:$}=function(t,e,n){let{contextType:r,contextId:o,action:a}=e,i=o||"unknown",s=["interaction"];return r&&(s.push(r),"loop"===r&&o?(i=o,s.push("loop-interaction")):"task"===r&&o?(i=o,s.push("task-management")):"phase"===r&&o&&(i=o,s.push("phase-interaction"))),s.push(t),a&&s.push(a),s.push(`${n}-action`),{contextStr:i,tags:s}}(t,s,r),f=function(t,e){let n=t.toISOString().replace(/T/,"-").replace(/:/g,"").replace(/\..+/,"").slice(0,15),r=e?`-${e}`:"";return`interaction-${n}${r}.md`}(l,s.contextId),h=(c={actor:r,source:a,context:m,tags:$,message:e,outcome:n},`---
uuid: ${u}
timestamp: ${p}
actor: ${c.actor}
source: ${c.source}
context: ${c.context}
tags: [${c.tags.join(", ")}]
---

## 💬 Message

${c.message}

## 🔄 Outcome

${c.outcome}
`),y=i().join(g,f);return await o().writeFile(y,h,"utf-8"),console.log(`✅ Interaction logged: ${u} -> ${f}`),u}catch(t){throw console.error("❌ Failed to log interaction:",t),t}}async function f(t,e,n,r,o){return $("chat-message",`Chat message in ${n} ${r}: "${t.substring(0,100)}${t.length>100?"...":""}"`,`Message successfully posted to ${o||`${n}/${r}`} chat history.`,e,"chat",{contextType:n,contextId:r,filePath:o,action:"post-message"})}async function h(t,e,n,r,o){return $("task-management",`Task ${t}: "${e.substring(0,100)}${e.length>100?"...":""}"`,r,n,"ui",{contextType:"task",contextId:o,action:`task-${t}`})}async function y(t,e,n,r,o){let a=`${"memory"===t?"Memory trace":"Execution log"} entry: "${e.substring(0,100)}${e.length>100?"...":""}"`,i=`Successfully logged to ${t} section in ${o||`${n}/${r}`}.`;return $(`${t}-log`,a,i,"ora","api",{contextType:n,contextId:r,filePath:o,action:`log-${t}`})}},6314:(t,e,n)=>{n.d(e,{G:()=>o});var r=n(3366);let o={engines:{yaml:{parse:t=>r.ZP.load(t,{schema:r.ZP.JSON_SCHEMA}),stringify:t=>r.ZP.dump(t)}}}}};var e=require("../../../../webpack-runtime.js");e.C(t);var n=t=>e(e.s=t),r=e.X(0,[276,972,366,127],()=>n(4745));module.exports=r})();
"use strict";(()=>{var e={};e.id=92,e.ids=[92],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},629:e=>{e.exports=require("fs/promises")},5315:e=>{e.exports=require("path")},8205:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>P,requestAsyncStorage:()=>x,routeModule:()=>g,serverHooks:()=>h,staticGenerationAsyncStorage:()=>v});var a={};t.r(a),t.d(a,{GET:()=>m});var s=t(9303),o=t(8716),n=t(3131),p=t(7070),i=t(629),u=t.n(i),l=t(5315),d=t.n(l),c=t(6716);async function m(){try{let e=d().resolve(process.cwd(),"..","..","..","runtime","Worksteams","roadmap","workstream_plan.md"),r=await u().readFile(e,"utf-8"),t=await (0,c.TU)(r);return p.NextResponse.json({content:t})}catch(r){console.error("Failed to get plan:",r);let e=r instanceof Error?r.message:"Internal Server Error";return p.NextResponse.json({message:"Failed to get plan",error:e},{status:500})}}let g=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/get-plan/route",pathname:"/api/get-plan",filename:"route",bundlePath:"app/api/get-plan/route"},resolvedPagePath:"/Users/air/Projects/ora-system/src/ui/react-app/app/api/get-plan/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:x,staticGenerationAsyncStorage:v,serverHooks:h}=g,f="/api/get-plan/route";function P(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:v})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[276,972,716],()=>t(8205));module.exports=a})();
"use strict";(()=>{var e={};e.id=383,e.ids=[383],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},2048:e=>{e.exports=require("fs")},629:e=>{e.exports=require("fs/promises")},5315:e=>{e.exports=require("path")},6140:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>k,patchFetch:()=>S,requestAsyncStorage:()=>E,routeModule:()=>h,serverHooks:()=>D,staticGenerationAsyncStorage:()=>y});var a={};r.r(a),r.d(a,{POST:()=>w});var o=r(9303),n=r(8716),s=r(3131),i=r(7070),u=r(629),d=r.n(u),c=r(5315),l=r.n(c),p=r(4027),m=r(7038);let f=l().resolve(process.cwd(),"../../../runtime/workstreams/roadmap/workstream_plan.md"),g=l().resolve(process.cwd(),"../../../runtime/loops"),$=l().resolve(process.cwd(),"../../../runtime/workstreams");async function w(e){let{task:t,destinationType:r,destinationId:a}=await e.json();if(!t||!r||!a)return i.NextResponse.json({message:"Missing required parameters: task, destinationType, and destinationId are required."},{status:400});try{let e;let o=a;switch(r){case"new-loop":let n=`${a}.md`;e=l().join(g,n),o=n;let s=`---
id: ${a}
name: ${a}
status: active
---

## ðŸŽ¯ Goal
...

## ðŸ”§ Tasks

## ðŸ§¾ Execution Log
`;await d().writeFile(e,s,"utf-8");break;case"existing-loop":e=l().join(g,a),o=a;break;case"project-task-file":e=l().join($,a),o=a;break;default:return i.NextResponse.json({message:`Unsupported destination type: ${r}`},{status:400})}await p.n.validateMarkdownSchema(e,["## \uD83D\uDD27 Tasks","## \uD83E\uDDFE Execution Log"]);let u=`- [ ] ${t.description}`,c=`- ${new Date().toISOString()}: Task "${t.description}" promoted from workstream_plan.md by user`;await p.n.appendToSection(e,"## \uD83D\uDD27 Tasks",u,t.id),await p.n.appendToSection(e,"## \uD83E\uDDFE Execution Log",c,t.id);let w=await d().readFile(f,"utf-8"),h=(0,m.Y)(w),E=h.findIndex(e=>e.id===t.id);if(-1===E)return i.NextResponse.json({message:"Task not found in workstream plan"},{status:404});{let e=(0,m.O)([h[E]],"");h[E].status="promoted",h[E].promoted_to=o;let r=(0,m.O)([h[E]],"");await p.n.replaceInSection(f,"### User-Defined Tasks",e,r,t.id),await p.n.replaceInSection(f,"### Ora-Suggested Tasks",e,r,t.id)}return i.NextResponse.json({message:"Task promoted successfully",promoted_to:o})}catch(t){console.error("Failed to promote task:",t);let e=t instanceof Error?t.message:"Internal Server Error";return i.NextResponse.json({message:`Failed to promote task: ${e}`},{status:500})}}let h=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/promote-task/route",pathname:"/api/promote-task",filename:"route",bundlePath:"app/api/promote-task/route"},resolvedPagePath:"/Users/air/Projects/ora-system/src/ui/react-app/app/api/promote-task/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:E,staticGenerationAsyncStorage:y,serverHooks:D}=h,k="/api/promote-task/route";function S(){return(0,s.patchFetch)({serverHooks:D,staticGenerationAsyncStorage:y})}},4027:(e,t,r)=>{r.d(t,{n:()=>h});var a=r(629),o=r.n(a),n=r(5315),s=r.n(n),i=r(9744),u=r.n(i),d=r(6314);let c=["## Purpose","## âœ… Objectives","## \uD83D\uDD27 Tasks","## \uD83E\uDDFE Execution Log","## \uD83E\uDDE0 Memory Trace"],l=s().resolve(__dirname,"../../"),p=s().join(l,"runtime","logs","mutation-log.json"),m=s().join(l,"runtime","logs","mutation-errors.json");async function f(e){let t=await o().readFile(e,"utf-8");return u()(t,d.G)}async function g(e,t){let r=u().stringify(t.content,t.data);await o().writeFile(e,r,"utf-8")}async function $(e){let t={timestamp:new Date().toISOString(),...e},r=[];try{let e=await o().readFile(p,"utf-8");r=JSON.parse(e)}catch(e){}r.push(t),await o().writeFile(p,JSON.stringify(r,null,2),"utf-8")}async function w(e){let t={timestamp:new Date().toISOString(),...e},r=[];try{let e=await o().readFile(m,"utf-8");r=JSON.parse(e)}catch(e){}r.push(t),await o().writeFile(m,JSON.stringify(r,null,2),"utf-8")}let h={async patchFrontmatter(e,t,r){let a=await f(e);a.data,a.data={...a.data,...t},await g(e,a),await $({filePath:e,mutationType:"PATCH_FRONTMATTER",summary:`Updated frontmatter. Changes: ${JSON.stringify(t)}`,loopOrTaskUuid:r})},async appendToSection(e,t,r,a){let o=await f(e);if(RegExp(`(^${t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),!o.content.includes(t))throw Error(`Validation Error: Section "${t}" not found in ${e}.`);o.content=o.content.replace(t,`${t}
${r}`),await g(e,o),await $({filePath:e,mutationType:"APPEND_TO_SECTION",summary:`Appended content to section "${t}".`,loopOrTaskUuid:a})},async replaceInSection(e,t,r,a,o){let n=await f(e),s=RegExp(`(^${t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),i=n.content.match(s);if(!i){let r=Error(`Validation Error: Section "${t}" not found in ${e}.`);throw await w({filePath:e,mutationType:"REPLACE_IN_SECTION",error:r.message,loopOrTaskUuid:o}),r}let u=i[0],d=u.replace(r,a);u!==d&&(n.content=n.content.replace(u,d),await g(e,n),await $({filePath:e,mutationType:"REPLACE_IN_SECTION",summary:`Replaced content in section "${t}".`,loopOrTaskUuid:o}))},async appendToLog(e,t){let r=await f(e),a="## \uD83E\uDDFE Execution Log";if(!r.content.includes(a))throw Error(`Validation Error: Section "${a}" not found in ${e}.`);let o=`- ${t.timestamp}: ${"ora"===t.actor?"\uD83E\uDD16":"\uD83D\uDC64"} ${t.action}`,n=RegExp(`(${a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),s=r.content.match(n);if(!s)throw Error(`Validation Error: Section "${a}" malformed in ${e}.`);let i=s[0],u=i.endsWith("\n")?`${i}${o}
`:`${i}
${o}
`;r.content=r.content.replace(i,u),await g(e,r),await $({filePath:e,mutationType:"APPEND_TO_LOG",summary:`Appended log entry: ${t.action}`})},async validateMarkdownSchema(e,t=c){let r;try{r=await o().readFile(e,"utf-8")}catch(t){throw Error(`Validation Error: File not found or unreadable at ${e}`)}let a=[],n={};for(let e of t){let t=RegExp(`^${e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}`,"gm"),o=r.match(t),s=o?o.length:0;n[e]=s,0===s?a.push(`Missing required section: "${e}"`):s>1&&a.push(`Duplicated section: "${e}" (found ${s} times)`)}for(let e of r.match(/^## .+$/gm)||[])if(t.includes(e)){let t=RegExp(`(^${e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),a=r.match(t);a&&(a[0].trim(),e.trim())}if(a.length>0)throw Error(`Validation Error in ${e}:
${a.join("\n")}`)},async dryRunMutation(e,t){let r,a;try{r=await o().readFile(e,"utf-8")}catch(t){throw Error(`Dry Run Error: Cannot read file at ${e}`)}try{a=t(r)}catch(e){throw Error(`Dry Run Error: Mutation function failed: ${e}`)}let n=r===a?void 0:"Content changed";return{preImage:r,postImage:a,diff:n}}}},7038:(e,t,r)=>{r.d(t,{O:()=>i,Y:()=>s});var a=r(5315),o=r.n(a);let n=o().resolve(process.cwd(),"../../../runtime/workstreams/roadmap/workstream_plan.md"),s=e=>{let t=[],r=null,a=e.split("\n");for(let e=0;e<a.length;e++){let s=a[e].trim(),i=s.match(/^### (User-Defined Tasks|Ora-Suggested Tasks)/);if(i){r=i[1];continue}if(!r)continue;let u=s.match(/^- \[([ x-])\] (.*)/);if(u){let[s,i,d]=u,c={description:d.trim(),status:"x"===i?"done":"pending",section:r,id:Buffer.from(d.trim()).toString("base64"),added_by:"user",source:`plan: ${o().basename(n)}`},l=e+1;for(;l<a.length;){let e=a[l].trim();if(e.startsWith("- [")||e.startsWith("###")||"---"===e)break;let t=e.match(/`([^`]+?):\s*([^`]+?)`/);if(t){let[e,r,a]=t;c[r.trim()]=a.trim()}else e&&(c.description+="\n"+a[l]);l++}"promoted"===c.status&&(c.status="promoted"),t.push(c),e=l-1}}return t},i=(e,t)=>{let r=e.filter(e=>"User-Defined Tasks"===e.section&&"rejected"!==e.status),a=e.filter(e=>"Ora-Suggested Tasks"===e.section&&"rejected"!==e.status),o=e=>{let t="done"===e.status?"[x]":"[ ]",r=`- ${t} ${e.description}
`;return r+=`  \`added_by: ${e.added_by}\`
  \`source: ${e.source}\`
`,e.context&&(r+=`  \`context: ${e.context}\`
`),e.promoted_to&&(r+=`  \`promoted_to: ${e.promoted_to}\`
`),"promoted"===e.status&&(r+="  `status: promoted`\n"),r},n=t.match(/---[\\s\\S]*?---/);return(n?n[0]:"")+"\n\n"+(`### User-Defined Tasks

`+r.map(o).join("\n")+`
---

`+`### Ora-Suggested Tasks

`)+a.map(o).join("\n")}},6314:(e,t,r)=>{r.d(t,{G:()=>o});var a=r(3366);let o={engines:{yaml:{parse:e=>a.ZP.load(e,{schema:a.ZP.JSON_SCHEMA}),stringify:e=>a.ZP.dump(e)}}}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,972,366,127],()=>r(6140));module.exports=a})();
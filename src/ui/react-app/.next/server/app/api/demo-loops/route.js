"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/demo-loops/route";
exports.ids = ["app/api/demo-loops/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdemo-loops%2Froute&page=%2Fapi%2Fdemo-loops%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdemo-loops%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdemo-loops%2Froute&page=%2Fapi%2Fdemo-loops%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdemo-loops%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_air_Projects_ora_system_src_ui_react_app_app_api_demo_loops_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/demo-loops/route.ts */ \"(rsc)/./app/api/demo-loops/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/demo-loops/route\",\n        pathname: \"/api/demo-loops\",\n        filename: \"route\",\n        bundlePath: \"app/api/demo-loops/route\"\n    },\n    resolvedPagePath: \"/Users/air/Projects/ora-system/src/ui/react-app/app/api/demo-loops/route.ts\",\n    nextConfigOutput,\n    userland: _Users_air_Projects_ora_system_src_ui_react_app_app_api_demo_loops_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/demo-loops/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZkZW1vLWxvb3BzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZkZW1vLWxvb3BzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZGVtby1sb29wcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFpciUyRlByb2plY3RzJTJGb3JhLXN5c3RlbSUyRnNyYyUyRnVpJTJGcmVhY3QtYXBwJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmFpciUyRlByb2plY3RzJTJGb3JhLXN5c3RlbSUyRnNyYyUyRnVpJTJGcmVhY3QtYXBwJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMyQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL29yYS1yZWFjdC1hcHAvPzkwNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2Fpci9Qcm9qZWN0cy9vcmEtc3lzdGVtL3NyYy91aS9yZWFjdC1hcHAvYXBwL2FwaS9kZW1vLWxvb3BzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9kZW1vLWxvb3BzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZGVtby1sb29wc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZGVtby1sb29wcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9haXIvUHJvamVjdHMvb3JhLXN5c3RlbS9zcmMvdWkvcmVhY3QtYXBwL2FwcC9hcGkvZGVtby1sb29wcy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZGVtby1sb29wcy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdemo-loops%2Froute&page=%2Fapi%2Fdemo-loops%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdemo-loops%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/demo-loops/route.ts":
/*!*************************************!*\
  !*** ./app/api/demo-loops/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var gray_matter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gray-matter */ \"(rsc)/./node_modules/gray-matter/index.js\");\n/* harmony import */ var gray_matter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(gray_matter__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/workstream-api */ \"(rsc)/./lib/workstream-api.ts\");\n\n\n\n\n// Force dynamic rendering since we use request.url for search params\nconst dynamic = \"force-dynamic\";\n// --- Helper Functions ---\nasync function loadWorkstreamLoopMetadata(workstream, fileName) {\n    try {\n        const fileContent = await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.readWorkstreamFile)(workstream, fileName);\n        const { data: frontmatter, content } = gray_matter__WEBPACK_IMPORTED_MODULE_2___default()(fileContent);\n        // Extract summary from content (first few lines after frontmatter)\n        const contentLines = content.trim().split(\"\\n\");\n        const summary = contentLines.slice(0, 3).join(\" \").replace(/#+\\s*/g, \"\").substring(0, 200) + \"...\";\n        const loopId = fileName.replace(\".md\", \"\");\n        return {\n            id: loopId,\n            name: loopId,\n            title: frontmatter.title || loopId,\n            phase: frontmatter.phase || \"0.0\",\n            workstream: frontmatter.workstream || workstream,\n            program: frontmatter.program,\n            status: frontmatter.status || \"unknown\",\n            score: frontmatter.score || 0.0,\n            tags: frontmatter.tags || [],\n            created: frontmatter.created || new Date().toISOString().split(\"T\")[0],\n            uuid: frontmatter.uuid || loopId,\n            summary: frontmatter.summary || summary,\n            filePath: `runtime/workstreams/${workstream}/${fileName}`,\n            type: frontmatter.type || \"task\",\n            origin: frontmatter.origin || \"file\"\n        };\n    } catch (error) {\n        console.error(`Failed to load loop metadata for ${fileName} in workstream ${workstream}:`, error);\n        return null;\n    }\n}\nasync function loadAllWorkstreamLoops(workstream) {\n    try {\n        // Try to load from workstream-specific artefacts directory first\n        let files = [];\n        try {\n            files = await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.listWorkstreamFiles)(workstream, \"artefacts\");\n        } catch  {\n            // If no artefacts directory, try root workstream directory\n            try {\n                files = await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.listWorkstreamFiles)(workstream);\n            } catch  {\n                // If workstream doesn't exist, return empty array\n                return [];\n            }\n        }\n        const loopFiles = files.filter((file)=>(file.startsWith(\"loop-\") || file.startsWith(\"task-\") || file.startsWith(\"phase-\") || file.startsWith(\"project-\")) && file.endsWith(\".md\"));\n        const loops = await Promise.all(loopFiles.map((fileName)=>{\n            // Try artefacts directory first, then root\n            return loadWorkstreamLoopMetadata(workstream, `artefacts/${fileName}`).catch(()=>loadWorkstreamLoopMetadata(workstream, fileName));\n        }));\n        return loops.filter((loop)=>loop !== null);\n    } catch (error) {\n        console.error(`Failed to load loops for workstream ${workstream}:`, error);\n        return [];\n    }\n}\n// Legacy fallback for existing loop files in runtime/loops\nasync function loadLegacyLoops() {\n    try {\n        const BASE_DIR = path__WEBPACK_IMPORTED_MODULE_1___default().resolve(process.cwd(), \"../../..\");\n        const LOOPS_DIR = path__WEBPACK_IMPORTED_MODULE_1___default().join(BASE_DIR, \"runtime/loops\");\n        const files = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readdir(LOOPS_DIR);\n        const loopFiles = files.filter((file)=>(file.startsWith(\"loop-\") || file.startsWith(\"task-\") || file.startsWith(\"phase-\") || file.startsWith(\"project-\")) && file.endsWith(\".md\"));\n        const loops = await Promise.all(loopFiles.map(async (fileName)=>{\n            try {\n                const filePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(LOOPS_DIR, fileName);\n                const fileContent = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(filePath, \"utf-8\");\n                const { data: frontmatter, content } = gray_matter__WEBPACK_IMPORTED_MODULE_2___default()(fileContent);\n                const contentLines = content.trim().split(\"\\n\");\n                const summary = contentLines.slice(0, 3).join(\" \").replace(/#+\\s*/g, \"\").substring(0, 200) + \"...\";\n                const loopId = fileName.replace(\".md\", \"\");\n                return {\n                    id: loopId,\n                    name: loopId,\n                    title: frontmatter.title || loopId,\n                    phase: frontmatter.phase || \"0.0\",\n                    workstream: frontmatter.workstream || \"unknown\",\n                    program: frontmatter.program,\n                    status: frontmatter.status || \"unknown\",\n                    score: frontmatter.score || 0.0,\n                    tags: frontmatter.tags || [],\n                    created: frontmatter.created || new Date().toISOString().split(\"T\")[0],\n                    uuid: frontmatter.uuid || loopId,\n                    summary: frontmatter.summary || summary,\n                    filePath: `runtime/loops/${fileName}`,\n                    type: frontmatter.type || \"task\",\n                    origin: frontmatter.origin || \"file\"\n                };\n            } catch (error) {\n                console.error(`Failed to load legacy loop ${fileName}:`, error);\n                return null;\n            }\n        }));\n        return loops.filter((loop)=>loop !== null);\n    } catch (error) {\n        console.error(\"Failed to load legacy loops directory:\", error);\n        return [];\n    }\n}\n// --- API Handlers ---\nasync function handleDemoLoopsRequest(request, workstreamContext) {\n    const { workstream, isValid } = workstreamContext;\n    // Validate workstream parameter format (alphanumeric only, 3-20 chars)\n    const workstreamRegex = /^[a-zA-Z][a-zA-Z0-9]{2,19}$/;\n    // Require explicit and valid workstream context\n    if (!isValid || !workstream || !workstreamRegex.test(workstream)) {\n        await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.logWorkstreamOperation)({\n            workstream: workstream || \"unknown\",\n            operation: \"read\",\n            endpoint: \"/api/demo-loops\",\n            result: \"error\",\n            error: \"Missing or invalid workstream parameter\"\n        });\n        return (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.createWorkstreamErrorResponse)(\"Missing or invalid workstream parameter. Must be alphanumeric, 3-20 characters.\", workstreamContext, 400);\n    }\n    // Check permissions\n    if (!(0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.hasWorkstreamPermission)(workstream, \"read\")) {\n        await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.logWorkstreamOperation)({\n            workstream,\n            operation: \"read\",\n            endpoint: \"/api/demo-loops\",\n            result: \"error\",\n            error: \"Insufficient permissions\"\n        });\n        return (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.createWorkstreamErrorResponse)(\"Insufficient permissions for workstream\", workstreamContext, 403);\n    }\n    try {\n        const { searchParams } = request.nextUrl;\n        const rawLoopId = searchParams.get(\"id\");\n        if (rawLoopId) {\n            // Sanitize loopId to prevent directory traversal\n            const loopId = rawLoopId.replace(/[^a-zA-Z0-9\\-_.]/g, \"\");\n            // Additional validation for loop ID format\n            if (loopId !== rawLoopId || loopId.includes(\"..\") || loopId.includes(\"/\")) {\n                await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.logWorkstreamOperation)({\n                    workstream,\n                    operation: \"read\",\n                    endpoint: \"/api/demo-loops\",\n                    data: {\n                        invalidLoopId: rawLoopId\n                    },\n                    result: \"error\",\n                    error: \"Invalid loop ID format\"\n                });\n                return (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.createWorkstreamErrorResponse)(\"Invalid loop ID format. Only alphanumeric characters, hyphens, underscores, and dots allowed.\", workstreamContext, 400);\n            }\n            // Load specific loop\n            const fileName = loopId.endsWith(\".md\") ? loopId : `${loopId}.md`;\n            const loop = await loadWorkstreamLoopMetadata(workstream, `artefacts/${fileName}`).catch(()=>loadWorkstreamLoopMetadata(workstream, fileName));\n            if (!loop) {\n                await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.logWorkstreamOperation)({\n                    workstream,\n                    operation: \"read\",\n                    endpoint: \"/api/demo-loops\",\n                    data: {\n                        loopId\n                    },\n                    result: \"error\",\n                    error: \"Loop not found\"\n                });\n                return (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.createWorkstreamErrorResponse)(`Loop not found: ${loopId}`, workstreamContext, 404);\n            }\n            await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.logWorkstreamOperation)({\n                workstream,\n                operation: \"read\",\n                endpoint: \"/api/demo-loops\",\n                data: {\n                    loopId\n                },\n                result: \"success\"\n            });\n            return (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.createWorkstreamResponse)(loop, workstreamContext);\n        } else {\n            // Load all loops for the workstream\n            const workstreamLoops = await loadAllWorkstreamLoops(workstream);\n            // For backwards compatibility, include legacy loops for all workstreams if they exist\n            const legacyLoops = await loadLegacyLoops();\n            const allLoops = [\n                ...workstreamLoops,\n                ...legacyLoops\n            ];\n            // Apply strict workstream filtering to ensure data isolation\n            const filteredLoops = allLoops.filter((loop)=>loop.workstream.toLowerCase() === workstream.toLowerCase());\n            await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.logWorkstreamOperation)({\n                workstream,\n                operation: \"read\",\n                endpoint: \"/api/demo-loops\",\n                data: {\n                    count: filteredLoops.length\n                },\n                result: \"success\"\n            });\n            return (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.createWorkstreamResponse)({\n                artefacts: filteredLoops\n            }, workstreamContext);\n        }\n    } catch (error) {\n        console.error(`Error in demo-loops API for workstream ${workstream}:`, error);\n        await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.logWorkstreamOperation)({\n            workstream,\n            operation: \"read\",\n            endpoint: \"/api/demo-loops\",\n            result: \"error\",\n            error: String(error)\n        });\n        return (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.createWorkstreamErrorResponse)(\"Internal server error\", workstreamContext, 500);\n    }\n}\nconst GET = (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_3__.withWorkstreamContext)(handleDemoLoopsRequest);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/demo-loops/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/workstream-api.ts":
/*!*******************************!*\
  !*** ./lib/workstream-api.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WORKSTREAM_REGISTRY: () => (/* binding */ WORKSTREAM_REGISTRY),\n/* harmony export */   createWorkstreamErrorResponse: () => (/* binding */ createWorkstreamErrorResponse),\n/* harmony export */   createWorkstreamResponse: () => (/* binding */ createWorkstreamResponse),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   extractWorkstreamContext: () => (/* binding */ extractWorkstreamContext),\n/* harmony export */   getWorkstreamArtefactsPath: () => (/* binding */ getWorkstreamArtefactsPath),\n/* harmony export */   getWorkstreamDataPath: () => (/* binding */ getWorkstreamDataPath),\n/* harmony export */   getWorkstreamLogsPath: () => (/* binding */ getWorkstreamLogsPath),\n/* harmony export */   getWorkstreamRoadmapPath: () => (/* binding */ getWorkstreamRoadmapPath),\n/* harmony export */   hasWorkstreamPermission: () => (/* binding */ hasWorkstreamPermission),\n/* harmony export */   isValidWorkstream: () => (/* binding */ isValidWorkstream),\n/* harmony export */   listWorkstreamFiles: () => (/* binding */ listWorkstreamFiles),\n/* harmony export */   logWorkstreamOperation: () => (/* binding */ logWorkstreamOperation),\n/* harmony export */   readWorkstreamFile: () => (/* binding */ readWorkstreamFile),\n/* harmony export */   validateWorkstreamRequest: () => (/* binding */ validateWorkstreamRequest),\n/* harmony export */   withWorkstreamContext: () => (/* binding */ withWorkstreamContext),\n/* harmony export */   writeWorkstreamFile: () => (/* binding */ writeWorkstreamFile)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/**\n * Workstream API Utilities\n * \n * Provides middleware, validation, and helper functions for workstream-scoped API operations.\n * Ensures strict domain isolation and multi-tenant data access patterns.\n */ \n\n\nconst WORKSTREAM_REGISTRY = {\n    ora: {\n        name: \"ora\",\n        displayName: \"Ora System\",\n        description: \"Context-aware autonomous agent - Core system development\",\n        status: \"active\",\n        dataPath: \"/runtime/workstreams/ora\",\n        allowedOperations: [\n            \"read\",\n            \"write\",\n            \"delete\",\n            \"chat\",\n            \"mutate\"\n        ],\n        owner: \"System Team\",\n        phase: \"11 - Filtering & Hierarchy\"\n    },\n    mecca: {\n        name: \"mecca\",\n        displayName: \"Mecca Project\",\n        description: \"Strategic business development initiative\",\n        status: \"planning\",\n        dataPath: \"/runtime/workstreams/mecca\",\n        allowedOperations: [\n            \"read\",\n            \"write\",\n            \"chat\",\n            \"mutate\"\n        ],\n        owner: \"Business Team\",\n        phase: \"1 - Foundation & Planning\"\n    },\n    sales: {\n        name: \"sales\",\n        displayName: \"Sales & Marketing\",\n        description: \"Customer acquisition and marketing operations\",\n        status: \"planning\",\n        dataPath: \"/runtime/workstreams/sales\",\n        allowedOperations: [\n            \"read\",\n            \"write\",\n            \"chat\",\n            \"mutate\"\n        ],\n        owner: \"Revenue Team\",\n        phase: \"1 - Customer Acquisition\"\n    }\n};\n// Workstream validation\nfunction isValidWorkstream(workstream) {\n    return workstream in WORKSTREAM_REGISTRY;\n}\nasync function extractWorkstreamContext(request) {\n    let workstream;\n    let source = \"default\";\n    // Priority 1: URL path parameter (/workstream/[name]/api/...)\n    const urlPath = request.nextUrl.pathname;\n    const workstreamMatch = urlPath.match(/\\/workstream\\/([^\\/]+)/);\n    if (workstreamMatch) {\n        workstream = workstreamMatch[1];\n        source = \"url\";\n    }\n    // Priority 2: Query parameter (?workstream=name)\n    if (!workstream) {\n        workstream = request.nextUrl.searchParams.get(\"workstream\") ?? undefined;\n        if (workstream) source = \"query\";\n    }\n    // Priority 3: Request body (for POST/PUT requests)\n    if (!workstream && (request.method === \"POST\" || request.method === \"PUT\")) {\n        try {\n            const body = await request.clone().json();\n            if (body.workstream) {\n                workstream = body.workstream;\n                source = \"body\";\n            }\n        } catch  {\n        // Ignore JSON parsing errors\n        }\n    }\n    // Priority 4: Custom header\n    if (!workstream) {\n        workstream = request.headers.get(\"x-workstream\") ?? undefined;\n        if (workstream) source = \"header\";\n    }\n    // Require explicit workstream - no defaults\n    if (!workstream) {\n        return {\n            workstream: \"\",\n            config: null,\n            dataPath: \"\",\n            isValid: false,\n            source: \"default\"\n        };\n    }\n    // Normalize and validate\n    const normalizedWorkstream = workstream.toLowerCase().trim();\n    const isValid = isValidWorkstream(normalizedWorkstream);\n    const config = isValid ? WORKSTREAM_REGISTRY[normalizedWorkstream] : null;\n    return {\n        workstream: normalizedWorkstream,\n        config,\n        dataPath: config?.dataPath || \"\",\n        isValid,\n        source\n    };\n}\n// Workstream middleware wrapper\nfunction withWorkstreamContext(handler) {\n    return async (request)=>{\n        try {\n            const workstreamContext = await extractWorkstreamContext(request);\n            // Log workstream context for debugging\n            console.log(`[API] ${request.method} ${request.nextUrl.pathname} - Workstream: ${workstreamContext.workstream} (${workstreamContext.source})`);\n            return await handler(request, workstreamContext);\n        } catch (error) {\n            console.error(\"[Workstream Middleware] Error:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Internal server error\",\n                message: \"Failed to process workstream context\",\n                timestamp: new Date().toISOString()\n            }, {\n                status: 500\n            });\n        }\n    };\n}\n// Path utilities for workstream-scoped file operations\nfunction getWorkstreamDataPath(workstream, ...segments) {\n    const config = WORKSTREAM_REGISTRY[workstream];\n    if (!config) {\n        throw new Error(`Invalid workstream: ${workstream}`);\n    }\n    // Get project root (3 levels up from current file in src/ui/react-app/lib/)\n    const projectRoot = process.cwd().includes(\"react-app\") ? path__WEBPACK_IMPORTED_MODULE_1___default().resolve(process.cwd(), \"../../..\") : process.cwd();\n    return path__WEBPACK_IMPORTED_MODULE_1___default().join(projectRoot, config.dataPath, ...segments);\n}\nfunction getWorkstreamArtefactsPath(workstream) {\n    return getWorkstreamDataPath(workstream, \"artefacts\");\n}\nfunction getWorkstreamLogsPath(workstream) {\n    return getWorkstreamDataPath(workstream, \"logs\");\n}\nfunction getWorkstreamRoadmapPath(workstream) {\n    return getWorkstreamDataPath(workstream, \"roadmap.md\");\n}\n// Permission checking\nfunction hasWorkstreamPermission(workstream, operation, user) {\n    const config = WORKSTREAM_REGISTRY[workstream];\n    if (!config) return false;\n    return config.allowedOperations.includes(operation);\n}\n// Workstream-scoped file operations\nasync function readWorkstreamFile(workstream, ...pathSegments) {\n    const filePath = getWorkstreamDataPath(workstream, ...pathSegments);\n    try {\n        return await fs__WEBPACK_IMPORTED_MODULE_2__.promises.readFile(filePath, \"utf-8\");\n    } catch (error) {\n        throw new Error(`Failed to read file in workstream ${workstream}: ${error}`);\n    }\n}\nasync function writeWorkstreamFile(workstream, content, ...pathSegments) {\n    const filePath = getWorkstreamDataPath(workstream, ...pathSegments);\n    try {\n        // Ensure directory exists\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.mkdir(path__WEBPACK_IMPORTED_MODULE_1___default().dirname(filePath), {\n            recursive: true\n        });\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.writeFile(filePath, content, \"utf-8\");\n    } catch (error) {\n        throw new Error(`Failed to write file in workstream ${workstream}: ${error}`);\n    }\n}\nasync function listWorkstreamFiles(workstream, ...pathSegments) {\n    const dirPath = getWorkstreamDataPath(workstream, ...pathSegments);\n    try {\n        const files = await fs__WEBPACK_IMPORTED_MODULE_2__.promises.readdir(dirPath);\n        return files.filter((file)=>!file.startsWith(\".\"));\n    } catch (error) {\n        // Return empty array if directory doesn't exist\n        return [];\n    }\n}\n// API Response helpers\nfunction createWorkstreamResponse(data, workstreamContext, status = 200) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ...data,\n        _meta: {\n            workstream: workstreamContext.workstream,\n            workstreamConfig: workstreamContext.config,\n            timestamp: new Date().toISOString(),\n            source: workstreamContext.source\n        }\n    }, {\n        status\n    });\n}\nfunction createWorkstreamErrorResponse(message, workstreamContext, status = 400) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: message,\n        workstream: workstreamContext?.workstream,\n        timestamp: new Date().toISOString()\n    }, {\n        status\n    });\n}\nfunction validateWorkstreamRequest(data, requiredFields = []) {\n    const errors = [];\n    // Check required fields\n    for (const field of requiredFields){\n        if (!data[field]) {\n            errors.push(`Missing required field: ${field}`);\n        }\n    }\n    // Validate workstream if provided\n    if (data.workstream && !isValidWorkstream(data.workstream)) {\n        errors.push(`Invalid workstream: ${data.workstream}`);\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\nasync function logWorkstreamOperation(log) {\n    const logEntry = {\n        ...log,\n        timestamp: new Date().toISOString()\n    };\n    try {\n        const logPath = getWorkstreamLogsPath(log.workstream);\n        const logFile = path__WEBPACK_IMPORTED_MODULE_1___default().join(logPath, `audit-${new Date().toISOString().split(\"T\")[0]}.json`);\n        // Ensure logs directory exists\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.mkdir(logPath, {\n            recursive: true\n        });\n        // Append to daily log file\n        let existingLogs = [];\n        try {\n            const existingContent = await fs__WEBPACK_IMPORTED_MODULE_2__.promises.readFile(logFile, \"utf-8\");\n            existingLogs = JSON.parse(existingContent);\n        } catch  {\n        // File doesn't exist yet, start with empty array\n        }\n        existingLogs.push(logEntry);\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.writeFile(logFile, JSON.stringify(existingLogs, null, 2));\n    } catch (error) {\n        console.error(\"[Audit Log] Failed to log operation:\", error);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    withWorkstreamContext,\n    extractWorkstreamContext,\n    createWorkstreamResponse,\n    createWorkstreamErrorResponse,\n    validateWorkstreamRequest,\n    getWorkstreamDataPath,\n    getWorkstreamArtefactsPath,\n    getWorkstreamRoadmapPath,\n    readWorkstreamFile,\n    writeWorkstreamFile,\n    listWorkstreamFiles,\n    logWorkstreamOperation,\n    WORKSTREAM_REGISTRY,\n    isValidWorkstream,\n    hasWorkstreamPermission\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cmtzdHJlYW0tYXBpLnRzPzcwMDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXb3Jrc3RyZWFtIEFQSSBVdGlsaXRpZXNcbiAqIFxuICogUHJvdmlkZXMgbWlkZGxld2FyZSwgdmFsaWRhdGlvbiwgYW5kIGhlbHBlciBmdW5jdGlvbnMgZm9yIHdvcmtzdHJlYW0tc2NvcGVkIEFQSSBvcGVyYXRpb25zLlxuICogRW5zdXJlcyBzdHJpY3QgZG9tYWluIGlzb2xhdGlvbiBhbmQgbXVsdGktdGVuYW50IGRhdGEgYWNjZXNzIHBhdHRlcm5zLlxuICovXG5cbmltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IHByb21pc2VzIGFzIGZzIH0gZnJvbSAnZnMnO1xuXG4vLyBXb3Jrc3RyZWFtIENvbmZpZ3VyYXRpb24gUmVnaXN0cnlcbmV4cG9ydCBpbnRlcmZhY2UgV29ya3N0cmVhbUNvbmZpZyB7XG4gIG5hbWU6IHN0cmluZztcbiAgZGlzcGxheU5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgc3RhdHVzOiAnYWN0aXZlJyB8ICdwbGFubmluZycgfCAnYXJjaGl2ZWQnO1xuICBkYXRhUGF0aDogc3RyaW5nO1xuICBhbGxvd2VkT3BlcmF0aW9uczogc3RyaW5nW107XG4gIG93bmVyPzogc3RyaW5nO1xuICBwaGFzZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IFdPUktTVFJFQU1fUkVHSVNUUlk6IFJlY29yZDxzdHJpbmcsIFdvcmtzdHJlYW1Db25maWc+ID0ge1xuICBvcmE6IHtcbiAgICBuYW1lOiAnb3JhJyxcbiAgICBkaXNwbGF5TmFtZTogJ09yYSBTeXN0ZW0nLFxuICAgIGRlc2NyaXB0aW9uOiAnQ29udGV4dC1hd2FyZSBhdXRvbm9tb3VzIGFnZW50IC0gQ29yZSBzeXN0ZW0gZGV2ZWxvcG1lbnQnLFxuICAgIHN0YXR1czogJ2FjdGl2ZScsXG4gICAgZGF0YVBhdGg6ICcvcnVudGltZS93b3Jrc3RyZWFtcy9vcmEnLFxuICAgIGFsbG93ZWRPcGVyYXRpb25zOiBbJ3JlYWQnLCAnd3JpdGUnLCAnZGVsZXRlJywgJ2NoYXQnLCAnbXV0YXRlJ10sXG4gICAgb3duZXI6ICdTeXN0ZW0gVGVhbScsXG4gICAgcGhhc2U6ICcxMSAtIEZpbHRlcmluZyAmIEhpZXJhcmNoeSdcbiAgfSxcbiAgbWVjY2E6IHtcbiAgICBuYW1lOiAnbWVjY2EnLFxuICAgIGRpc3BsYXlOYW1lOiAnTWVjY2EgUHJvamVjdCcsXG4gICAgZGVzY3JpcHRpb246ICdTdHJhdGVnaWMgYnVzaW5lc3MgZGV2ZWxvcG1lbnQgaW5pdGlhdGl2ZScsXG4gICAgc3RhdHVzOiAncGxhbm5pbmcnLFxuICAgIGRhdGFQYXRoOiAnL3J1bnRpbWUvd29ya3N0cmVhbXMvbWVjY2EnLFxuICAgIGFsbG93ZWRPcGVyYXRpb25zOiBbJ3JlYWQnLCAnd3JpdGUnLCAnY2hhdCcsICdtdXRhdGUnXSxcbiAgICBvd25lcjogJ0J1c2luZXNzIFRlYW0nLFxuICAgIHBoYXNlOiAnMSAtIEZvdW5kYXRpb24gJiBQbGFubmluZydcbiAgfSxcbiAgc2FsZXM6IHtcbiAgICBuYW1lOiAnc2FsZXMnLFxuICAgIGRpc3BsYXlOYW1lOiAnU2FsZXMgJiBNYXJrZXRpbmcnLFxuICAgIGRlc2NyaXB0aW9uOiAnQ3VzdG9tZXIgYWNxdWlzaXRpb24gYW5kIG1hcmtldGluZyBvcGVyYXRpb25zJyxcbiAgICBzdGF0dXM6ICdwbGFubmluZycsXG4gICAgZGF0YVBhdGg6ICcvcnVudGltZS93b3Jrc3RyZWFtcy9zYWxlcycsXG4gICAgYWxsb3dlZE9wZXJhdGlvbnM6IFsncmVhZCcsICd3cml0ZScsICdjaGF0JywgJ211dGF0ZSddLFxuICAgIG93bmVyOiAnUmV2ZW51ZSBUZWFtJyxcbiAgICBwaGFzZTogJzEgLSBDdXN0b21lciBBY3F1aXNpdGlvbidcbiAgfVxufTtcblxuLy8gV29ya3N0cmVhbSB2YWxpZGF0aW9uXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFdvcmtzdHJlYW0od29ya3N0cmVhbTogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiB3b3Jrc3RyZWFtIGluIFdPUktTVFJFQU1fUkVHSVNUUlk7XG59XG5cbi8vIFdvcmtzdHJlYW0gY29udGV4dCBleHRyYWN0aW9uIGZyb20gcmVxdWVzdFxuZXhwb3J0IGludGVyZmFjZSBXb3Jrc3RyZWFtQ29udGV4dCB7XG4gIHdvcmtzdHJlYW06IHN0cmluZztcbiAgY29uZmlnOiBXb3Jrc3RyZWFtQ29uZmlnO1xuICBkYXRhUGF0aDogc3RyaW5nO1xuICBpc1ZhbGlkOiBib29sZWFuO1xuICBzb3VyY2U6ICd1cmwnIHwgJ3F1ZXJ5JyB8ICdib2R5JyB8ICdoZWFkZXInIHwgJ2RlZmF1bHQnO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXh0cmFjdFdvcmtzdHJlYW1Db250ZXh0KHJlcXVlc3Q6IE5leHRSZXF1ZXN0KTogUHJvbWlzZTxXb3Jrc3RyZWFtQ29udGV4dD4ge1xuICBsZXQgd29ya3N0cmVhbTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBsZXQgc291cmNlOiBXb3Jrc3RyZWFtQ29udGV4dFsnc291cmNlJ10gPSAnZGVmYXVsdCc7XG5cbiAgLy8gUHJpb3JpdHkgMTogVVJMIHBhdGggcGFyYW1ldGVyICgvd29ya3N0cmVhbS9bbmFtZV0vYXBpLy4uLilcbiAgY29uc3QgdXJsUGF0aCA9IHJlcXVlc3QubmV4dFVybC5wYXRobmFtZTtcbiAgY29uc3Qgd29ya3N0cmVhbU1hdGNoID0gdXJsUGF0aC5tYXRjaCgvXFwvd29ya3N0cmVhbVxcLyhbXlxcL10rKS8pO1xuICBpZiAod29ya3N0cmVhbU1hdGNoKSB7XG4gICAgd29ya3N0cmVhbSA9IHdvcmtzdHJlYW1NYXRjaFsxXTtcbiAgICBzb3VyY2UgPSAndXJsJztcbiAgfVxuXG4gIC8vIFByaW9yaXR5IDI6IFF1ZXJ5IHBhcmFtZXRlciAoP3dvcmtzdHJlYW09bmFtZSlcbiAgaWYgKCF3b3Jrc3RyZWFtKSB7XG4gICAgd29ya3N0cmVhbSA9IHJlcXVlc3QubmV4dFVybC5zZWFyY2hQYXJhbXMuZ2V0KCd3b3Jrc3RyZWFtJykgPz8gdW5kZWZpbmVkO1xuICAgIGlmICh3b3Jrc3RyZWFtKSBzb3VyY2UgPSAncXVlcnknO1xuICB9XG5cbiAgLy8gUHJpb3JpdHkgMzogUmVxdWVzdCBib2R5IChmb3IgUE9TVC9QVVQgcmVxdWVzdHMpXG4gIGlmICghd29ya3N0cmVhbSAmJiAocmVxdWVzdC5tZXRob2QgPT09ICdQT1NUJyB8fCByZXF1ZXN0Lm1ldGhvZCA9PT0gJ1BVVCcpKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXF1ZXN0LmNsb25lKCkuanNvbigpO1xuICAgICAgaWYgKGJvZHkud29ya3N0cmVhbSkge1xuICAgICAgICB3b3Jrc3RyZWFtID0gYm9keS53b3Jrc3RyZWFtO1xuICAgICAgICBzb3VyY2UgPSAnYm9keSc7XG4gICAgICB9XG4gICAgfSBjYXRjaCB7XG4gICAgICAvLyBJZ25vcmUgSlNPTiBwYXJzaW5nIGVycm9yc1xuICAgIH1cbiAgfVxuXG4gIC8vIFByaW9yaXR5IDQ6IEN1c3RvbSBoZWFkZXJcbiAgaWYgKCF3b3Jrc3RyZWFtKSB7XG4gICAgd29ya3N0cmVhbSA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ3gtd29ya3N0cmVhbScpID8/IHVuZGVmaW5lZDtcbiAgICBpZiAod29ya3N0cmVhbSkgc291cmNlID0gJ2hlYWRlcic7XG4gIH1cblxuICAvLyBSZXF1aXJlIGV4cGxpY2l0IHdvcmtzdHJlYW0gLSBubyBkZWZhdWx0c1xuICBpZiAoIXdvcmtzdHJlYW0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgd29ya3N0cmVhbTogJycsXG4gICAgICBjb25maWc6IG51bGwgYXMgYW55LFxuICAgICAgZGF0YVBhdGg6ICcnLFxuICAgICAgaXNWYWxpZDogZmFsc2UsXG4gICAgICBzb3VyY2U6ICdkZWZhdWx0J1xuICAgIH07XG4gIH1cblxuICAvLyBOb3JtYWxpemUgYW5kIHZhbGlkYXRlXG4gIGNvbnN0IG5vcm1hbGl6ZWRXb3Jrc3RyZWFtID0gd29ya3N0cmVhbS50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcbiAgY29uc3QgaXNWYWxpZCA9IGlzVmFsaWRXb3Jrc3RyZWFtKG5vcm1hbGl6ZWRXb3Jrc3RyZWFtKTtcbiAgY29uc3QgY29uZmlnID0gaXNWYWxpZCA/IFdPUktTVFJFQU1fUkVHSVNUUllbbm9ybWFsaXplZFdvcmtzdHJlYW1dIDogbnVsbCBhcyBhbnk7XG5cbiAgcmV0dXJuIHtcbiAgICB3b3Jrc3RyZWFtOiBub3JtYWxpemVkV29ya3N0cmVhbSxcbiAgICBjb25maWcsXG4gICAgZGF0YVBhdGg6IGNvbmZpZz8uZGF0YVBhdGggfHwgJycsXG4gICAgaXNWYWxpZCxcbiAgICBzb3VyY2VcbiAgfTtcbn1cblxuLy8gV29ya3N0cmVhbSBtaWRkbGV3YXJlIHdyYXBwZXJcbmV4cG9ydCBmdW5jdGlvbiB3aXRoV29ya3N0cmVhbUNvbnRleHQ8VCA9IGFueT4oXG4gIGhhbmRsZXI6IChyZXF1ZXN0OiBOZXh0UmVxdWVzdCwgY29udGV4dDogV29ya3N0cmVhbUNvbnRleHQpID0+IFByb21pc2U8TmV4dFJlc3BvbnNlPFQ+PlxuKSB7XG4gIHJldHVybiBhc3luYyAocmVxdWVzdDogTmV4dFJlcXVlc3QpOiBQcm9taXNlPE5leHRSZXNwb25zZTxUIHwgeyBlcnJvcjogc3RyaW5nOyBtZXNzYWdlOiBzdHJpbmc7IHRpbWVzdGFtcDogc3RyaW5nIH0+PiA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHdvcmtzdHJlYW1Db250ZXh0ID0gYXdhaXQgZXh0cmFjdFdvcmtzdHJlYW1Db250ZXh0KHJlcXVlc3QpO1xuICAgICAgXG4gICAgICAvLyBMb2cgd29ya3N0cmVhbSBjb250ZXh0IGZvciBkZWJ1Z2dpbmdcbiAgICAgIGNvbnNvbGUubG9nKGBbQVBJXSAke3JlcXVlc3QubWV0aG9kfSAke3JlcXVlc3QubmV4dFVybC5wYXRobmFtZX0gLSBXb3Jrc3RyZWFtOiAke3dvcmtzdHJlYW1Db250ZXh0LndvcmtzdHJlYW19ICgke3dvcmtzdHJlYW1Db250ZXh0LnNvdXJjZX0pYCk7XG4gICAgICBcbiAgICAgIHJldHVybiBhd2FpdCBoYW5kbGVyKHJlcXVlc3QsIHdvcmtzdHJlYW1Db250ZXh0KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignW1dvcmtzdHJlYW0gTWlkZGxld2FyZV0gRXJyb3I6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IFxuICAgICAgICAgIGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJywgXG4gICAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBwcm9jZXNzIHdvcmtzdHJlYW0gY29udGV4dCcsXG4gICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgICAgfSxcbiAgICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgICApIGFzIE5leHRSZXNwb25zZTxUIHwgeyBlcnJvcjogc3RyaW5nOyBtZXNzYWdlOiBzdHJpbmc7IHRpbWVzdGFtcDogc3RyaW5nIH0+O1xuICAgIH1cbiAgfTtcbn1cblxuLy8gUGF0aCB1dGlsaXRpZXMgZm9yIHdvcmtzdHJlYW0tc2NvcGVkIGZpbGUgb3BlcmF0aW9uc1xuZXhwb3J0IGZ1bmN0aW9uIGdldFdvcmtzdHJlYW1EYXRhUGF0aCh3b3Jrc3RyZWFtOiBzdHJpbmcsIC4uLnNlZ21lbnRzOiBzdHJpbmdbXSk6IHN0cmluZyB7XG4gIGNvbnN0IGNvbmZpZyA9IFdPUktTVFJFQU1fUkVHSVNUUllbd29ya3N0cmVhbV07XG4gIGlmICghY29uZmlnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHdvcmtzdHJlYW06ICR7d29ya3N0cmVhbX1gKTtcbiAgfVxuICBcbiAgLy8gR2V0IHByb2plY3Qgcm9vdCAoMyBsZXZlbHMgdXAgZnJvbSBjdXJyZW50IGZpbGUgaW4gc3JjL3VpL3JlYWN0LWFwcC9saWIvKVxuICBjb25zdCBwcm9qZWN0Um9vdCA9IHByb2Nlc3MuY3dkKCkuaW5jbHVkZXMoJ3JlYWN0LWFwcCcpIFxuICAgID8gcGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCksICcuLi8uLi8uLicpXG4gICAgOiBwcm9jZXNzLmN3ZCgpO1xuICBcbiAgcmV0dXJuIHBhdGguam9pbihwcm9qZWN0Um9vdCwgY29uZmlnLmRhdGFQYXRoLCAuLi5zZWdtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRXb3Jrc3RyZWFtQXJ0ZWZhY3RzUGF0aCh3b3Jrc3RyZWFtOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gZ2V0V29ya3N0cmVhbURhdGFQYXRoKHdvcmtzdHJlYW0sICdhcnRlZmFjdHMnKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFdvcmtzdHJlYW1Mb2dzUGF0aCh3b3Jrc3RyZWFtOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gZ2V0V29ya3N0cmVhbURhdGFQYXRoKHdvcmtzdHJlYW0sICdsb2dzJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRXb3Jrc3RyZWFtUm9hZG1hcFBhdGgod29ya3N0cmVhbTogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGdldFdvcmtzdHJlYW1EYXRhUGF0aCh3b3Jrc3RyZWFtLCAncm9hZG1hcC5tZCcpO1xufVxuXG4vLyBQZXJtaXNzaW9uIGNoZWNraW5nXG5leHBvcnQgZnVuY3Rpb24gaGFzV29ya3N0cmVhbVBlcm1pc3Npb24oXG4gIHdvcmtzdHJlYW06IHN0cmluZywgXG4gIG9wZXJhdGlvbjogc3RyaW5nLCBcbiAgdXNlcj86IHN0cmluZ1xuKTogYm9vbGVhbiB7XG4gIGNvbnN0IGNvbmZpZyA9IFdPUktTVFJFQU1fUkVHSVNUUllbd29ya3N0cmVhbV07XG4gIGlmICghY29uZmlnKSByZXR1cm4gZmFsc2U7XG4gIFxuICByZXR1cm4gY29uZmlnLmFsbG93ZWRPcGVyYXRpb25zLmluY2x1ZGVzKG9wZXJhdGlvbik7XG59XG5cbi8vIFdvcmtzdHJlYW0tc2NvcGVkIGZpbGUgb3BlcmF0aW9uc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlYWRXb3Jrc3RyZWFtRmlsZShcbiAgd29ya3N0cmVhbTogc3RyaW5nLCBcbiAgLi4ucGF0aFNlZ21lbnRzOiBzdHJpbmdbXVxuKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgY29uc3QgZmlsZVBhdGggPSBnZXRXb3Jrc3RyZWFtRGF0YVBhdGgod29ya3N0cmVhbSwgLi4ucGF0aFNlZ21lbnRzKTtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYXdhaXQgZnMucmVhZEZpbGUoZmlsZVBhdGgsICd1dGYtOCcpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHJlYWQgZmlsZSBpbiB3b3Jrc3RyZWFtICR7d29ya3N0cmVhbX06ICR7ZXJyb3J9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHdyaXRlV29ya3N0cmVhbUZpbGUoXG4gIHdvcmtzdHJlYW06IHN0cmluZywgXG4gIGNvbnRlbnQ6IHN0cmluZyxcbiAgLi4ucGF0aFNlZ21lbnRzOiBzdHJpbmdbXVxuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IGZpbGVQYXRoID0gZ2V0V29ya3N0cmVhbURhdGFQYXRoKHdvcmtzdHJlYW0sIC4uLnBhdGhTZWdtZW50cyk7XG4gIHRyeSB7XG4gICAgLy8gRW5zdXJlIGRpcmVjdG9yeSBleGlzdHNcbiAgICBhd2FpdCBmcy5ta2RpcihwYXRoLmRpcm5hbWUoZmlsZVBhdGgpLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcbiAgICBhd2FpdCBmcy53cml0ZUZpbGUoZmlsZVBhdGgsIGNvbnRlbnQsICd1dGYtOCcpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHdyaXRlIGZpbGUgaW4gd29ya3N0cmVhbSAke3dvcmtzdHJlYW19OiAke2Vycm9yfWApO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsaXN0V29ya3N0cmVhbUZpbGVzKFxuICB3b3Jrc3RyZWFtOiBzdHJpbmcsIFxuICAuLi5wYXRoU2VnbWVudHM6IHN0cmluZ1tdXG4pOiBQcm9taXNlPHN0cmluZ1tdPiB7XG4gIGNvbnN0IGRpclBhdGggPSBnZXRXb3Jrc3RyZWFtRGF0YVBhdGgod29ya3N0cmVhbSwgLi4ucGF0aFNlZ21lbnRzKTtcbiAgdHJ5IHtcbiAgICBjb25zdCBmaWxlcyA9IGF3YWl0IGZzLnJlYWRkaXIoZGlyUGF0aCk7XG4gICAgcmV0dXJuIGZpbGVzLmZpbHRlcihmaWxlID0+ICFmaWxlLnN0YXJ0c1dpdGgoJy4nKSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gUmV0dXJuIGVtcHR5IGFycmF5IGlmIGRpcmVjdG9yeSBkb2Vzbid0IGV4aXN0XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG5cbi8vIEFQSSBSZXNwb25zZSBoZWxwZXJzXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlV29ya3N0cmVhbVJlc3BvbnNlPFQ+KFxuICBkYXRhOiBULCBcbiAgd29ya3N0cmVhbUNvbnRleHQ6IFdvcmtzdHJlYW1Db250ZXh0LFxuICBzdGF0dXM6IG51bWJlciA9IDIwMFxuKTogTmV4dFJlc3BvbnNlPFQgJiB7IF9tZXRhOiBhbnkgfT4ge1xuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgIC4uLmRhdGEsXG4gICAgX21ldGE6IHtcbiAgICAgIHdvcmtzdHJlYW06IHdvcmtzdHJlYW1Db250ZXh0LndvcmtzdHJlYW0sXG4gICAgICB3b3Jrc3RyZWFtQ29uZmlnOiB3b3Jrc3RyZWFtQ29udGV4dC5jb25maWcsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIHNvdXJjZTogd29ya3N0cmVhbUNvbnRleHQuc291cmNlXG4gICAgfVxuICB9LCB7IHN0YXR1cyB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVdvcmtzdHJlYW1FcnJvclJlc3BvbnNlKFxuICBtZXNzYWdlOiBzdHJpbmcsXG4gIHdvcmtzdHJlYW1Db250ZXh0PzogV29ya3N0cmVhbUNvbnRleHQsXG4gIHN0YXR1czogbnVtYmVyID0gNDAwXG4pOiBOZXh0UmVzcG9uc2Uge1xuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgIGVycm9yOiBtZXNzYWdlLFxuICAgIHdvcmtzdHJlYW06IHdvcmtzdHJlYW1Db250ZXh0Py53b3Jrc3RyZWFtLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gIH0sIHsgc3RhdHVzIH0pO1xufVxuXG4vLyBWYWxpZGF0aW9uIHNjaGVtYXNcbmV4cG9ydCBpbnRlcmZhY2UgV29ya3N0cmVhbUFwaVJlcXVlc3Qge1xuICB3b3Jrc3RyZWFtPzogc3RyaW5nO1xuICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVdvcmtzdHJlYW1SZXF1ZXN0KFxuICBkYXRhOiBhbnksIFxuICByZXF1aXJlZEZpZWxkczogc3RyaW5nW10gPSBbXVxuKTogeyBpc1ZhbGlkOiBib29sZWFuOyBlcnJvcnM6IHN0cmluZ1tdIH0ge1xuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG4gIFxuICAvLyBDaGVjayByZXF1aXJlZCBmaWVsZHNcbiAgZm9yIChjb25zdCBmaWVsZCBvZiByZXF1aXJlZEZpZWxkcykge1xuICAgIGlmICghZGF0YVtmaWVsZF0pIHtcbiAgICAgIGVycm9ycy5wdXNoKGBNaXNzaW5nIHJlcXVpcmVkIGZpZWxkOiAke2ZpZWxkfWApO1xuICAgIH1cbiAgfVxuICBcbiAgLy8gVmFsaWRhdGUgd29ya3N0cmVhbSBpZiBwcm92aWRlZFxuICBpZiAoZGF0YS53b3Jrc3RyZWFtICYmICFpc1ZhbGlkV29ya3N0cmVhbShkYXRhLndvcmtzdHJlYW0pKSB7XG4gICAgZXJyb3JzLnB1c2goYEludmFsaWQgd29ya3N0cmVhbTogJHtkYXRhLndvcmtzdHJlYW19YCk7XG4gIH1cbiAgXG4gIHJldHVybiB7XG4gICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICBlcnJvcnNcbiAgfTtcbn1cblxuLy8gQXVkaXQgbG9nZ2luZ1xuZXhwb3J0IGludGVyZmFjZSBXb3Jrc3RyZWFtQXVkaXRMb2cge1xuICB0aW1lc3RhbXA6IHN0cmluZztcbiAgd29ya3N0cmVhbTogc3RyaW5nO1xuICBvcGVyYXRpb246IHN0cmluZztcbiAgZW5kcG9pbnQ6IHN0cmluZztcbiAgdXNlcj86IHN0cmluZztcbiAgZGF0YT86IGFueTtcbiAgcmVzdWx0OiAnc3VjY2VzcycgfCAnZXJyb3InO1xuICBlcnJvcj86IHN0cmluZztcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvZ1dvcmtzdHJlYW1PcGVyYXRpb24oXG4gIGxvZzogT21pdDxXb3Jrc3RyZWFtQXVkaXRMb2csICd0aW1lc3RhbXAnPlxuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IGxvZ0VudHJ5OiBXb3Jrc3RyZWFtQXVkaXRMb2cgPSB7XG4gICAgLi4ubG9nLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gIH07XG4gIFxuICB0cnkge1xuICAgIGNvbnN0IGxvZ1BhdGggPSBnZXRXb3Jrc3RyZWFtTG9nc1BhdGgobG9nLndvcmtzdHJlYW0pO1xuICAgIGNvbnN0IGxvZ0ZpbGUgPSBwYXRoLmpvaW4obG9nUGF0aCwgYGF1ZGl0LSR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF19Lmpzb25gKTtcbiAgICBcbiAgICAvLyBFbnN1cmUgbG9ncyBkaXJlY3RvcnkgZXhpc3RzXG4gICAgYXdhaXQgZnMubWtkaXIobG9nUGF0aCwgeyByZWN1cnNpdmU6IHRydWUgfSk7XG4gICAgXG4gICAgLy8gQXBwZW5kIHRvIGRhaWx5IGxvZyBmaWxlXG4gICAgbGV0IGV4aXN0aW5nTG9nczogV29ya3N0cmVhbUF1ZGl0TG9nW10gPSBbXTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXhpc3RpbmdDb250ZW50ID0gYXdhaXQgZnMucmVhZEZpbGUobG9nRmlsZSwgJ3V0Zi04Jyk7XG4gICAgICBleGlzdGluZ0xvZ3MgPSBKU09OLnBhcnNlKGV4aXN0aW5nQ29udGVudCk7XG4gICAgfSBjYXRjaCB7XG4gICAgICAvLyBGaWxlIGRvZXNuJ3QgZXhpc3QgeWV0LCBzdGFydCB3aXRoIGVtcHR5IGFycmF5XG4gICAgfVxuICAgIFxuICAgIGV4aXN0aW5nTG9ncy5wdXNoKGxvZ0VudHJ5KTtcbiAgICBhd2FpdCBmcy53cml0ZUZpbGUobG9nRmlsZSwgSlNPTi5zdHJpbmdpZnkoZXhpc3RpbmdMb2dzLCBudWxsLCAyKSk7XG4gICAgXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignW0F1ZGl0IExvZ10gRmFpbGVkIHRvIGxvZyBvcGVyYXRpb246JywgZXJyb3IpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgd2l0aFdvcmtzdHJlYW1Db250ZXh0LFxuICBleHRyYWN0V29ya3N0cmVhbUNvbnRleHQsXG4gIGNyZWF0ZVdvcmtzdHJlYW1SZXNwb25zZSxcbiAgY3JlYXRlV29ya3N0cmVhbUVycm9yUmVzcG9uc2UsXG4gIHZhbGlkYXRlV29ya3N0cmVhbVJlcXVlc3QsXG4gIGdldFdvcmtzdHJlYW1EYXRhUGF0aCxcbiAgZ2V0V29ya3N0cmVhbUFydGVmYWN0c1BhdGgsXG4gIGdldFdvcmtzdHJlYW1Sb2FkbWFwUGF0aCxcbiAgcmVhZFdvcmtzdHJlYW1GaWxlLFxuICB3cml0ZVdvcmtzdHJlYW1GaWxlLFxuICBsaXN0V29ya3N0cmVhbUZpbGVzLFxuICBsb2dXb3Jrc3RyZWFtT3BlcmF0aW9uLFxuICBXT1JLU1RSRUFNX1JFR0lTVFJZLFxuICBpc1ZhbGlkV29ya3N0cmVhbSxcbiAgaGFzV29ya3N0cmVhbVBlcm1pc3Npb25cbn07ICJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJwYXRoIiwicHJvbWlzZXMiLCJmcyIsIldPUktTVFJFQU1fUkVHSVNUUlkiLCJvcmEiLCJuYW1lIiwiZGlzcGxheU5hbWUiLCJkZXNjcmlwdGlvbiIsInN0YXR1cyIsImRhdGFQYXRoIiwiYWxsb3dlZE9wZXJhdGlvbnMiLCJvd25lciIsInBoYXNlIiwibWVjY2EiLCJzYWxlcyIsImlzVmFsaWRXb3Jrc3RyZWFtIiwid29ya3N0cmVhbSIsImV4dHJhY3RXb3Jrc3RyZWFtQ29udGV4dCIsInJlcXVlc3QiLCJzb3VyY2UiLCJ1cmxQYXRoIiwibmV4dFVybCIsInBhdGhuYW1lIiwid29ya3N0cmVhbU1hdGNoIiwibWF0Y2giLCJzZWFyY2hQYXJhbXMiLCJnZXQiLCJ1bmRlZmluZWQiLCJtZXRob2QiLCJib2R5IiwiY2xvbmUiLCJqc29uIiwiaGVhZGVycyIsImNvbmZpZyIsImlzVmFsaWQiLCJub3JtYWxpemVkV29ya3N0cmVhbSIsInRvTG93ZXJDYXNlIiwidHJpbSIsIndpdGhXb3Jrc3RyZWFtQ29udGV4dCIsImhhbmRsZXIiLCJ3b3Jrc3RyZWFtQ29udGV4dCIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsIm1lc3NhZ2UiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJnZXRXb3Jrc3RyZWFtRGF0YVBhdGgiLCJzZWdtZW50cyIsIkVycm9yIiwicHJvamVjdFJvb3QiLCJwcm9jZXNzIiwiY3dkIiwiaW5jbHVkZXMiLCJyZXNvbHZlIiwiam9pbiIsImdldFdvcmtzdHJlYW1BcnRlZmFjdHNQYXRoIiwiZ2V0V29ya3N0cmVhbUxvZ3NQYXRoIiwiZ2V0V29ya3N0cmVhbVJvYWRtYXBQYXRoIiwiaGFzV29ya3N0cmVhbVBlcm1pc3Npb24iLCJvcGVyYXRpb24iLCJ1c2VyIiwicmVhZFdvcmtzdHJlYW1GaWxlIiwicGF0aFNlZ21lbnRzIiwiZmlsZVBhdGgiLCJyZWFkRmlsZSIsIndyaXRlV29ya3N0cmVhbUZpbGUiLCJjb250ZW50IiwibWtkaXIiLCJkaXJuYW1lIiwicmVjdXJzaXZlIiwid3JpdGVGaWxlIiwibGlzdFdvcmtzdHJlYW1GaWxlcyIsImRpclBhdGgiLCJmaWxlcyIsInJlYWRkaXIiLCJmaWx0ZXIiLCJmaWxlIiwic3RhcnRzV2l0aCIsImNyZWF0ZVdvcmtzdHJlYW1SZXNwb25zZSIsImRhdGEiLCJfbWV0YSIsIndvcmtzdHJlYW1Db25maWciLCJjcmVhdGVXb3Jrc3RyZWFtRXJyb3JSZXNwb25zZSIsInZhbGlkYXRlV29ya3N0cmVhbVJlcXVlc3QiLCJyZXF1aXJlZEZpZWxkcyIsImVycm9ycyIsImZpZWxkIiwicHVzaCIsImxlbmd0aCIsImxvZ1dvcmtzdHJlYW1PcGVyYXRpb24iLCJsb2dFbnRyeSIsImxvZ1BhdGgiLCJsb2dGaWxlIiwic3BsaXQiLCJleGlzdGluZ0xvZ3MiLCJleGlzdGluZ0NvbnRlbnQiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/workstream-api.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/esprima","vendor-chunks/gray-matter","vendor-chunks/kind-of","vendor-chunks/section-matter","vendor-chunks/extend-shallow","vendor-chunks/is-extendable","vendor-chunks/strip-bom-string"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdemo-loops%2Froute&page=%2Fapi%2Fdemo-loops%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdemo-loops%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();
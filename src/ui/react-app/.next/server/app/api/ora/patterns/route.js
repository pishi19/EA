"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/ora/patterns/route";
exports.ids = ["app/api/ora/patterns/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = import("pg");;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fora%2Fpatterns%2Froute&page=%2Fapi%2Fora%2Fpatterns%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fora%2Fpatterns%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fora%2Fpatterns%2Froute&page=%2Fapi%2Fora%2Fpatterns%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fora%2Fpatterns%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_air_Projects_ora_system_src_ui_react_app_app_api_ora_patterns_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/ora/patterns/route.ts */ \"(rsc)/./app/api/ora/patterns/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_air_Projects_ora_system_src_ui_react_app_app_api_ora_patterns_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_Users_air_Projects_ora_system_src_ui_react_app_app_api_ora_patterns_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/ora/patterns/route\",\n        pathname: \"/api/ora/patterns\",\n        filename: \"route\",\n        bundlePath: \"app/api/ora/patterns/route\"\n    },\n    resolvedPagePath: \"/Users/air/Projects/ora-system/src/ui/react-app/app/api/ora/patterns/route.ts\",\n    nextConfigOutput,\n    userland: _Users_air_Projects_ora_system_src_ui_react_app_app_api_ora_patterns_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/ora/patterns/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZvcmElMkZwYXR0ZXJucyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGb3JhJTJGcGF0dGVybnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZvcmElMkZwYXR0ZXJucyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFpciUyRlByb2plY3RzJTJGb3JhLXN5c3RlbSUyRnNyYyUyRnVpJTJGcmVhY3QtYXBwJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmFpciUyRlByb2plY3RzJTJGb3JhLXN5c3RlbSUyRnNyYyUyRnVpJTJGcmVhY3QtYXBwJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUM2QjtBQUMxRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL29yYS1yZWFjdC1hcHAvP2I4NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2Fpci9Qcm9qZWN0cy9vcmEtc3lzdGVtL3NyYy91aS9yZWFjdC1hcHAvYXBwL2FwaS9vcmEvcGF0dGVybnMvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL29yYS9wYXR0ZXJucy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL29yYS9wYXR0ZXJuc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvb3JhL3BhdHRlcm5zL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2Fpci9Qcm9qZWN0cy9vcmEtc3lzdGVtL3NyYy91aS9yZWFjdC1hcHAvYXBwL2FwaS9vcmEvcGF0dGVybnMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL29yYS9wYXR0ZXJucy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fora%2Fpatterns%2Froute&page=%2Fapi%2Fora%2Fpatterns%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fora%2Fpatterns%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/ora/patterns/route.ts":
/*!***************************************!*\
  !*** ./app/api/ora/patterns/route.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _app_ora_lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/ora/lib/database */ \"(rsc)/./app/ora/lib/database.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_app_ora_lib_database__WEBPACK_IMPORTED_MODULE_1__]);\n_app_ora_lib_database__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Common pattern types that Ora learns\nconst PATTERN_TYPES = {\n    VISION_TEMPLATE: \"vision_template\",\n    MISSION_TEMPLATE: \"mission_template\",\n    CADENCE_SUGGESTION: \"cadence_suggestion\",\n    SUCCESSFUL_INTERACTION: \"successful_interaction\",\n    WORKSTREAM_TYPE: \"workstream_type\",\n    OKR_TEMPLATE: \"okr_template\",\n    KPI_SUGGESTION: \"kpi_suggestion\"\n};\nasync function POST(request) {\n    try {\n        // Check database connection\n        const dbHealthy = await (0,_app_ora_lib_database__WEBPACK_IMPORTED_MODULE_1__.checkDatabaseConnection)();\n        if (!dbHealthy) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Database connection unavailable\"\n            }, {\n                status: 503\n            });\n        }\n        const body = await request.json();\n        const { pattern_type, pattern_content, examples } = body;\n        // Validate required fields\n        if (!pattern_type || !pattern_content) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Pattern type and content are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Save the pattern (will increment count if it already exists)\n        const pattern = await (0,_app_ora_lib_database__WEBPACK_IMPORTED_MODULE_1__.savePattern)({\n            pattern_type,\n            pattern_content,\n            examples: examples || []\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            pattern,\n            message: pattern.occurrence_count && pattern.occurrence_count > 1 ? `Pattern reinforced (seen ${pattern.occurrence_count} times)` : \"New pattern learned\"\n        });\n    } catch (error) {\n        console.error(\"Failed to save pattern:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to save pattern\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const pattern_type = searchParams.get(\"pattern_type\");\n        const limit = parseInt(searchParams.get(\"limit\") || \"10\");\n        // Get patterns, optionally filtered by type\n        const patterns = await (0,_app_ora_lib_database__WEBPACK_IMPORTED_MODULE_1__.getPatterns)(pattern_type || undefined, limit);\n        // Group patterns by type for easier consumption\n        const groupedPatterns = patterns.reduce((acc, pattern)=>{\n            if (!acc[pattern.pattern_type]) {\n                acc[pattern.pattern_type] = [];\n            }\n            acc[pattern.pattern_type].push(pattern);\n            return acc;\n        }, {});\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            patterns,\n            grouped: groupedPatterns,\n            total: patterns.length,\n            types: Object.keys(groupedPatterns)\n        });\n    } catch (error) {\n        console.error(\"Failed to get patterns:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to retrieve patterns\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Seed some initial patterns for Ora\nasync function seedInitialPatterns() {\n    const initialPatterns = [\n        {\n            pattern_type: PATTERN_TYPES.VISION_TEMPLATE,\n            pattern_content: \"Customer Support Excellence\",\n            examples: [\n                \"Achieve 95% customer satisfaction with 2-hour response times\",\n                \"Resolve 90% of issues on first contact with 98% accuracy\"\n            ]\n        },\n        {\n            pattern_type: PATTERN_TYPES.VISION_TEMPLATE,\n            pattern_content: \"Product Development Speed\",\n            examples: [\n                \"Ship 3 major features per quarter with zero critical bugs\",\n                \"Reduce time-to-market by 50% while maintaining quality\"\n            ]\n        },\n        {\n            pattern_type: PATTERN_TYPES.MISSION_TEMPLATE,\n            pattern_content: \"Customer Support Daily Activities\",\n            examples: [\n                \"Respond to customer inquiries via chat, email, and phone\",\n                \"Create and update knowledge base articles\",\n                \"Collaborate with product team on bug reports\"\n            ]\n        },\n        {\n            pattern_type: PATTERN_TYPES.CADENCE_SUGGESTION,\n            pattern_content: \"Agile Team Rhythm\",\n            examples: [\n                \"Daily 15-minute standups at 9am\",\n                \"Weekly 1-hour sprint planning on Mondays\",\n                \"Bi-weekly retrospectives on Friday afternoons\"\n            ]\n        },\n        {\n            pattern_type: PATTERN_TYPES.WORKSTREAM_TYPE,\n            pattern_content: \"Engineering\",\n            examples: [\n                \"Frontend Development\",\n                \"Backend Services\",\n                \"DevOps & Infrastructure\",\n                \"Quality Assurance\"\n            ]\n        },\n        {\n            pattern_type: PATTERN_TYPES.OKR_TEMPLATE,\n            pattern_content: \"Customer Satisfaction OKR\",\n            examples: [\n                \"Objective: Delight customers with exceptional support\",\n                \"KR1: Achieve 95% CSAT score\",\n                \"KR2: Reduce average response time to under 2 hours\",\n                \"KR3: Implement self-service for top 10 issues\"\n            ]\n        }\n    ];\n    try {\n        for (const pattern of initialPatterns){\n            await (0,_app_ora_lib_database__WEBPACK_IMPORTED_MODULE_1__.savePattern)(pattern);\n        }\n        console.log(\"✅ Initial patterns seeded successfully\");\n    } catch (error) {\n        console.error(\"Failed to seed patterns:\", error);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/ora/patterns/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/ora/lib/database.ts":
/*!*********************************!*\
  !*** ./app/ora/lib/database.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkDatabaseConnection: () => (/* binding */ checkDatabaseConnection),\n/* harmony export */   closeDatabase: () => (/* binding */ closeDatabase),\n/* harmony export */   getConstitution: () => (/* binding */ getConstitution),\n/* harmony export */   getConversationHistory: () => (/* binding */ getConversationHistory),\n/* harmony export */   getPatterns: () => (/* binding */ getPatterns),\n/* harmony export */   saveConstitution: () => (/* binding */ saveConstitution),\n/* harmony export */   saveConversation: () => (/* binding */ saveConversation),\n/* harmony export */   savePattern: () => (/* binding */ savePattern),\n/* harmony export */   withTransaction: () => (/* binding */ withTransaction)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Database connection configuration\nconst connectionConfig = {\n    host: process.env.DATABASE_HOST || \"localhost\",\n    port: parseInt(process.env.DATABASE_PORT || \"5432\"),\n    database: process.env.DATABASE_NAME || \"ora_development\",\n    user: process.env.DATABASE_USER || \"air\",\n    password: process.env.DATABASE_PASSWORD || \"\",\n    // Connection pool settings\n    max: 20,\n    idleTimeoutMillis: 30000,\n    connectionTimeoutMillis: 2000\n};\n// Use DATABASE_URL if provided, otherwise use individual config\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool(process.env.DATABASE_URL ? {\n    connectionString: process.env.DATABASE_URL\n} : connectionConfig);\n// Log connection info (without password)\nconsole.log(\"\\uD83D\\uDD17 PostgreSQL connection configured:\", {\n    host: connectionConfig.host,\n    port: connectionConfig.port,\n    database: connectionConfig.database,\n    user: connectionConfig.user\n});\n// Test database connection\npool.on(\"connect\", ()=>{\n    console.log(\"✅ Connected to PostgreSQL database\");\n});\npool.on(\"error\", (err)=>{\n    console.error(\"❌ Unexpected error on idle client\", err);\n    process.exit(-1);\n});\n// Helper function for transactions\nasync function withTransaction(callback) {\n    const client = await pool.connect();\n    try {\n        await client.query(\"BEGIN\");\n        const result = await callback(client);\n        await client.query(\"COMMIT\");\n        return result;\n    } catch (error) {\n        await client.query(\"ROLLBACK\");\n        throw error;\n    } finally{\n        client.release();\n    }\n}\n// Conversation functions\nasync function saveConversation(conversation) {\n    const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    const query = `\n    INSERT INTO ora_conversations (id, workstream_id, message, speaker, metadata)\n    VALUES ($1, $2, $3, $4, $5)\n    RETURNING *\n  `;\n    const result = await pool.query(query, [\n        id,\n        conversation.workstream_id || null,\n        conversation.message,\n        conversation.speaker,\n        JSON.stringify(conversation.metadata || {})\n    ]);\n    return {\n        ...result.rows[0],\n        metadata: result.rows[0].metadata || {}\n    };\n}\nasync function getConversationHistory(workstream_id, limit = 50) {\n    const query = workstream_id ? \"SELECT * FROM ora_conversations WHERE workstream_id = $1 ORDER BY created_at DESC LIMIT $2\" : \"SELECT * FROM ora_conversations ORDER BY created_at DESC LIMIT $1\";\n    const params = workstream_id ? [\n        workstream_id,\n        limit\n    ] : [\n        limit\n    ];\n    const result = await pool.query(query, params);\n    return result.rows.map((row)=>({\n            ...row,\n            metadata: row.metadata || {}\n        }));\n}\n// Constitution functions\nasync function saveConstitution(constitution, client) {\n    const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    const query = `\n    INSERT INTO workstream_constitutions (id, workstream_id, vision, mission, cadence, okrs, kpis)\n    VALUES ($1, $2, $3, $4, $5, $6, $7)\n    RETURNING *\n  `;\n    const queryClient = client || pool;\n    const result = await queryClient.query(query, [\n        id,\n        constitution.workstream_id,\n        constitution.vision,\n        constitution.mission,\n        constitution.cadence,\n        JSON.stringify(constitution.okrs || []),\n        JSON.stringify(constitution.kpis || [])\n    ]);\n    return {\n        ...result.rows[0],\n        okrs: result.rows[0].okrs || [],\n        kpis: result.rows[0].kpis || []\n    };\n}\nasync function getConstitution(workstream_id) {\n    const query = \"SELECT * FROM workstream_constitutions WHERE workstream_id = $1\";\n    const result = await pool.query(query, [\n        workstream_id\n    ]);\n    if (result.rows.length === 0) return null;\n    return {\n        ...result.rows[0],\n        okrs: result.rows[0].okrs || [],\n        kpis: result.rows[0].kpis || []\n    };\n}\n// Pattern functions\nasync function savePattern(pattern) {\n    // Check if pattern already exists\n    const existingQuery = `\n    SELECT * FROM ora_patterns \n    WHERE pattern_type = $1 AND pattern_content = $2\n  `;\n    const existing = await pool.query(existingQuery, [\n        pattern.pattern_type,\n        pattern.pattern_content\n    ]);\n    if (existing.rows.length > 0) {\n        // Update occurrence count\n        const updateQuery = `\n      UPDATE ora_patterns \n      SET occurrence_count = occurrence_count + 1, \n          last_observed = CURRENT_TIMESTAMP \n      WHERE id = $1\n      RETURNING *\n    `;\n        const result = await pool.query(updateQuery, [\n            existing.rows[0].id\n        ]);\n        return {\n            ...result.rows[0],\n            examples: result.rows[0].examples || []\n        };\n    }\n    // Insert new pattern\n    const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    const insertQuery = `\n    INSERT INTO ora_patterns (id, pattern_type, pattern_content, examples, occurrence_count)\n    VALUES ($1, $2, $3, $4, $5)\n    RETURNING *\n  `;\n    const result = await pool.query(insertQuery, [\n        id,\n        pattern.pattern_type,\n        pattern.pattern_content,\n        JSON.stringify(pattern.examples || []),\n        pattern.occurrence_count || 1\n    ]);\n    return {\n        ...result.rows[0],\n        examples: result.rows[0].examples || []\n    };\n}\nasync function getPatterns(pattern_type, limit = 10) {\n    const query = pattern_type ? \"SELECT * FROM ora_patterns WHERE pattern_type = $1 ORDER BY occurrence_count DESC, last_observed DESC LIMIT $2\" : \"SELECT * FROM ora_patterns ORDER BY occurrence_count DESC, last_observed DESC LIMIT $1\";\n    const params = pattern_type ? [\n        pattern_type,\n        limit\n    ] : [\n        limit\n    ];\n    const result = await pool.query(query, params);\n    return result.rows.map((row)=>({\n            ...row,\n            examples: row.examples || []\n        }));\n}\n// Health check function\nasync function checkDatabaseConnection() {\n    try {\n        const result = await pool.query(\"SELECT NOW()\");\n        console.log(\"✅ Database connection healthy:\", result.rows[0].now);\n        return true;\n    } catch (error) {\n        console.error(\"❌ Database connection failed:\", error);\n        return false;\n    }\n}\n// Utility function to close database connection pool (for cleanup)\nasync function closeDatabase() {\n    await pool.end();\n    console.log(\"\\uD83D\\uDD12 Database connection pool closed\");\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/ora/lib/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fora%2Fpatterns%2Froute&page=%2Fapi%2Fora%2Fpatterns%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fora%2Fpatterns%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();
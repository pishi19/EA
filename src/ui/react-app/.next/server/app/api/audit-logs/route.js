"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/audit-logs/route";
exports.ids = ["app/api/audit-logs/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faudit-logs%2Froute&page=%2Fapi%2Faudit-logs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faudit-logs%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faudit-logs%2Froute&page=%2Fapi%2Faudit-logs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faudit-logs%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_air_Projects_ora_system_src_ui_react_app_app_api_audit_logs_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/audit-logs/route.ts */ \"(rsc)/./app/api/audit-logs/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/audit-logs/route\",\n        pathname: \"/api/audit-logs\",\n        filename: \"route\",\n        bundlePath: \"app/api/audit-logs/route\"\n    },\n    resolvedPagePath: \"/Users/air/Projects/ora-system/src/ui/react-app/app/api/audit-logs/route.ts\",\n    nextConfigOutput,\n    userland: _Users_air_Projects_ora_system_src_ui_react_app_app_api_audit_logs_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/audit-logs/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdWRpdC1sb2dzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhdWRpdC1sb2dzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYXVkaXQtbG9ncyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFpciUyRlByb2plY3RzJTJGb3JhLXN5c3RlbSUyRnNyYyUyRnVpJTJGcmVhY3QtYXBwJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmFpciUyRlByb2plY3RzJTJGb3JhLXN5c3RlbSUyRnNyYyUyRnVpJTJGcmVhY3QtYXBwJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMyQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL29yYS1yZWFjdC1hcHAvPzAzMjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2Fpci9Qcm9qZWN0cy9vcmEtc3lzdGVtL3NyYy91aS9yZWFjdC1hcHAvYXBwL2FwaS9hdWRpdC1sb2dzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hdWRpdC1sb2dzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYXVkaXQtbG9nc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYXVkaXQtbG9ncy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9haXIvUHJvamVjdHMvb3JhLXN5c3RlbS9zcmMvdWkvcmVhY3QtYXBwL2FwcC9hcGkvYXVkaXQtbG9ncy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYXVkaXQtbG9ncy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faudit-logs%2Froute&page=%2Fapi%2Faudit-logs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faudit-logs%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/audit-logs/route.ts":
/*!*************************************!*\
  !*** ./app/api/audit-logs/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_workstream_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/workstream-api */ \"(rsc)/./lib/workstream-api.ts\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nasync function getAuditLogs(workstream, operation, result, dateFrom, dateTo, limit = 100, offset = 0) {\n    try {\n        // Get project root\n        const projectRoot = process.cwd().includes(\"react-app\") ? path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"../../..\") : process.cwd();\n        const allLogs = [];\n        const workstreams = new Set();\n        const operations = new Set();\n        // Read all audit log files across workstreams\n        const workstreamDirs = [\n            \"ora\",\n            \"mecca\",\n            \"sales\"\n        ];\n        for (const ws of workstreamDirs){\n            const logsDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(projectRoot, \"runtime\", \"workstreams\", ws, \"logs\");\n            if (!fs__WEBPACK_IMPORTED_MODULE_3___default().existsSync(logsDir)) continue;\n            const files = fs__WEBPACK_IMPORTED_MODULE_3___default().readdirSync(logsDir).filter((file)=>file.startsWith(\"audit-\") && file.endsWith(\".json\")).sort(); // Sort to get chronological order\n            for (const file of files){\n                try {\n                    const filePath = path__WEBPACK_IMPORTED_MODULE_2___default().join(logsDir, file);\n                    // Check if file is being written to (size changes)\n                    const stats = fs__WEBPACK_IMPORTED_MODULE_3___default().statSync(filePath);\n                    const fileContent = fs__WEBPACK_IMPORTED_MODULE_3___default().readFileSync(filePath, \"utf-8\");\n                    // Trim whitespace and check if it's a valid JSON structure\n                    const trimmedContent = fileContent.trim();\n                    if (!trimmedContent.startsWith(\"[\") || !trimmedContent.endsWith(\"]\")) {\n                        console.warn(`Skipping malformed audit log file ${file}: not a valid JSON array`);\n                        continue;\n                    }\n                    // Parse with additional error handling\n                    let logs;\n                    try {\n                        logs = JSON.parse(trimmedContent);\n                    } catch (parseError) {\n                        console.warn(`Skipping audit log file ${file} due to JSON parse error:`, parseError);\n                        continue;\n                    }\n                    // Validate that it's an array\n                    if (!Array.isArray(logs)) {\n                        console.warn(`Skipping audit log file ${file}: parsed content is not an array`);\n                        continue;\n                    }\n                    logs.forEach((log)=>{\n                        if (log && typeof log === \"object\" && log.workstream && log.operation) {\n                            workstreams.add(log.workstream);\n                            operations.add(log.operation);\n                        }\n                    });\n                    allLogs.push(...logs);\n                } catch (error) {\n                    console.error(`Error reading audit log file ${file}:`, error);\n                // Continue processing other files instead of failing completely\n                }\n            }\n        }\n        // Sort logs by timestamp (newest first)\n        allLogs.sort((a, b)=>new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        // Apply filters\n        let filteredLogs = allLogs;\n        if (workstream) {\n            filteredLogs = filteredLogs.filter((log)=>log.workstream === workstream);\n        }\n        if (operation) {\n            filteredLogs = filteredLogs.filter((log)=>log.operation === operation);\n        }\n        if (result) {\n            filteredLogs = filteredLogs.filter((log)=>log.result === result);\n        }\n        if (dateFrom) {\n            const fromDate = new Date(dateFrom);\n            filteredLogs = filteredLogs.filter((log)=>new Date(log.timestamp) >= fromDate);\n        }\n        if (dateTo) {\n            const toDate = new Date(dateTo);\n            filteredLogs = filteredLogs.filter((log)=>new Date(log.timestamp) <= toDate);\n        }\n        // Apply pagination\n        const paginatedLogs = filteredLogs.slice(offset, offset + limit);\n        // Calculate date range\n        const dates = allLogs.map((log)=>log.timestamp).sort();\n        const dateRange = {\n            earliest: dates[0] || new Date().toISOString(),\n            latest: dates[dates.length - 1] || new Date().toISOString()\n        };\n        return {\n            logs: paginatedLogs,\n            totalCount: allLogs.length,\n            filteredCount: filteredLogs.length,\n            workstreams: Array.from(workstreams).sort(),\n            operations: Array.from(operations).sort(),\n            dateRange\n        };\n    } catch (error) {\n        console.error(\"Error reading audit logs:\", error);\n        throw error;\n    }\n}\nconst GET = (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_1__.withWorkstreamContext)(async (request, context)=>{\n    const { searchParams } = new URL(request.url);\n    const workstream = searchParams.get(\"workstream\") || undefined;\n    const operation = searchParams.get(\"operation\") || undefined;\n    const result = searchParams.get(\"result\") || undefined;\n    const dateFrom = searchParams.get(\"dateFrom\") || undefined;\n    const dateTo = searchParams.get(\"dateTo\") || undefined;\n    const limit = parseInt(searchParams.get(\"limit\") || \"100\");\n    const offset = parseInt(searchParams.get(\"offset\") || \"0\");\n    try {\n        const auditData = await getAuditLogs(workstream, operation, result, dateFrom, dateTo, limit, offset);\n        // Log this audit log access\n        await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_1__.logWorkstreamOperation)({\n            workstream: context.workstream,\n            operation: \"read\",\n            endpoint: \"/api/audit-logs\",\n            data: {\n                filters: {\n                    workstream,\n                    operation,\n                    result,\n                    dateFrom,\n                    dateTo\n                },\n                resultCount: auditData.filteredCount\n            },\n            result: \"success\"\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(auditData);\n    } catch (error) {\n        console.error(\"Audit logs API error:\", error);\n        await (0,_lib_workstream_api__WEBPACK_IMPORTED_MODULE_1__.logWorkstreamOperation)({\n            workstream: context.workstream,\n            operation: \"read\",\n            endpoint: \"/api/audit-logs\",\n            data: {\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            },\n            result: \"error\",\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        });\n        // Re-throw to let the middleware handle the error response\n        throw error;\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/audit-logs/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/workstream-api.ts":
/*!*******************************!*\
  !*** ./lib/workstream-api.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WORKSTREAM_REGISTRY: () => (/* binding */ WORKSTREAM_REGISTRY),\n/* harmony export */   createWorkstreamErrorResponse: () => (/* binding */ createWorkstreamErrorResponse),\n/* harmony export */   createWorkstreamResponse: () => (/* binding */ createWorkstreamResponse),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   extractWorkstreamContext: () => (/* binding */ extractWorkstreamContext),\n/* harmony export */   getWorkstreamArtefactsPath: () => (/* binding */ getWorkstreamArtefactsPath),\n/* harmony export */   getWorkstreamDataPath: () => (/* binding */ getWorkstreamDataPath),\n/* harmony export */   getWorkstreamLogsPath: () => (/* binding */ getWorkstreamLogsPath),\n/* harmony export */   getWorkstreamRoadmapPath: () => (/* binding */ getWorkstreamRoadmapPath),\n/* harmony export */   hasWorkstreamPermission: () => (/* binding */ hasWorkstreamPermission),\n/* harmony export */   isValidWorkstream: () => (/* binding */ isValidWorkstream),\n/* harmony export */   listWorkstreamFiles: () => (/* binding */ listWorkstreamFiles),\n/* harmony export */   logWorkstreamOperation: () => (/* binding */ logWorkstreamOperation),\n/* harmony export */   readWorkstreamFile: () => (/* binding */ readWorkstreamFile),\n/* harmony export */   validateWorkstreamRequest: () => (/* binding */ validateWorkstreamRequest),\n/* harmony export */   withWorkstreamContext: () => (/* binding */ withWorkstreamContext),\n/* harmony export */   writeWorkstreamFile: () => (/* binding */ writeWorkstreamFile)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/**\n * Workstream API Utilities\n * \n * Provides middleware, validation, and helper functions for workstream-scoped API operations.\n * Ensures strict domain isolation and multi-tenant data access patterns.\n */ \n\n\nconst WORKSTREAM_REGISTRY = {\n    ora: {\n        name: \"ora\",\n        displayName: \"Ora System\",\n        description: \"Context-aware autonomous agent - Core system development\",\n        status: \"active\",\n        dataPath: \"/runtime/workstreams/ora\",\n        allowedOperations: [\n            \"read\",\n            \"write\",\n            \"delete\",\n            \"chat\",\n            \"mutate\"\n        ],\n        owner: \"System Team\",\n        phase: \"11 - Filtering & Hierarchy\"\n    },\n    mecca: {\n        name: \"mecca\",\n        displayName: \"Mecca Project\",\n        description: \"Strategic business development initiative\",\n        status: \"planning\",\n        dataPath: \"/runtime/workstreams/mecca\",\n        allowedOperations: [\n            \"read\",\n            \"write\",\n            \"chat\",\n            \"mutate\"\n        ],\n        owner: \"Business Team\",\n        phase: \"1 - Foundation & Planning\"\n    },\n    sales: {\n        name: \"sales\",\n        displayName: \"Sales & Marketing\",\n        description: \"Customer acquisition and marketing operations\",\n        status: \"planning\",\n        dataPath: \"/runtime/workstreams/sales\",\n        allowedOperations: [\n            \"read\",\n            \"write\",\n            \"chat\",\n            \"mutate\"\n        ],\n        owner: \"Revenue Team\",\n        phase: \"1 - Customer Acquisition\"\n    }\n};\n// Workstream validation\nfunction isValidWorkstream(workstream) {\n    return workstream in WORKSTREAM_REGISTRY;\n}\nasync function extractWorkstreamContext(request) {\n    let workstream;\n    let source = \"default\";\n    // Priority 1: URL path parameter (/workstream/[name]/api/...)\n    const urlPath = request.nextUrl.pathname;\n    const workstreamMatch = urlPath.match(/\\/workstream\\/([^\\/]+)/);\n    if (workstreamMatch) {\n        workstream = workstreamMatch[1];\n        source = \"url\";\n    }\n    // Priority 2: Query parameter (?workstream=name)\n    if (!workstream) {\n        workstream = request.nextUrl.searchParams.get(\"workstream\") ?? undefined;\n        if (workstream) source = \"query\";\n    }\n    // Priority 3: Request body (for POST/PUT requests)\n    if (!workstream && (request.method === \"POST\" || request.method === \"PUT\")) {\n        try {\n            const body = await request.clone().json();\n            if (body.workstream) {\n                workstream = body.workstream;\n                source = \"body\";\n            }\n        } catch  {\n        // Ignore JSON parsing errors\n        }\n    }\n    // Priority 4: Custom header\n    if (!workstream) {\n        workstream = request.headers.get(\"x-workstream\") ?? undefined;\n        if (workstream) source = \"header\";\n    }\n    // Require explicit workstream - no defaults\n    if (!workstream) {\n        return {\n            workstream: \"\",\n            config: null,\n            dataPath: \"\",\n            isValid: false,\n            source: \"default\"\n        };\n    }\n    // Normalize and validate\n    const normalizedWorkstream = workstream.toLowerCase().trim();\n    const isValid = isValidWorkstream(normalizedWorkstream);\n    const config = isValid ? WORKSTREAM_REGISTRY[normalizedWorkstream] : null;\n    return {\n        workstream: normalizedWorkstream,\n        config,\n        dataPath: config?.dataPath || \"\",\n        isValid,\n        source\n    };\n}\n// Workstream middleware wrapper\nfunction withWorkstreamContext(handler) {\n    return async (request)=>{\n        try {\n            const workstreamContext = await extractWorkstreamContext(request);\n            // Log workstream context for debugging\n            console.log(`[API] ${request.method} ${request.nextUrl.pathname} - Workstream: ${workstreamContext.workstream} (${workstreamContext.source})`);\n            return await handler(request, workstreamContext);\n        } catch (error) {\n            console.error(\"[Workstream Middleware] Error:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Internal server error\",\n                message: \"Failed to process workstream context\",\n                timestamp: new Date().toISOString()\n            }, {\n                status: 500\n            });\n        }\n    };\n}\n// Path utilities for workstream-scoped file operations\nfunction getWorkstreamDataPath(workstream, ...segments) {\n    const config = WORKSTREAM_REGISTRY[workstream];\n    if (!config) {\n        throw new Error(`Invalid workstream: ${workstream}`);\n    }\n    // Get project root (3 levels up from current file in src/ui/react-app/lib/)\n    const projectRoot = process.cwd().includes(\"react-app\") ? path__WEBPACK_IMPORTED_MODULE_1___default().resolve(process.cwd(), \"../../..\") : process.cwd();\n    return path__WEBPACK_IMPORTED_MODULE_1___default().join(projectRoot, config.dataPath, ...segments);\n}\nfunction getWorkstreamArtefactsPath(workstream) {\n    return getWorkstreamDataPath(workstream, \"artefacts\");\n}\nfunction getWorkstreamLogsPath(workstream) {\n    return getWorkstreamDataPath(workstream, \"logs\");\n}\nfunction getWorkstreamRoadmapPath(workstream) {\n    return getWorkstreamDataPath(workstream, \"roadmap.md\");\n}\n// Permission checking\nfunction hasWorkstreamPermission(workstream, operation, user) {\n    const config = WORKSTREAM_REGISTRY[workstream];\n    if (!config) return false;\n    return config.allowedOperations.includes(operation);\n}\n// Workstream-scoped file operations\nasync function readWorkstreamFile(workstream, ...pathSegments) {\n    const filePath = getWorkstreamDataPath(workstream, ...pathSegments);\n    try {\n        return await fs__WEBPACK_IMPORTED_MODULE_2__.promises.readFile(filePath, \"utf-8\");\n    } catch (error) {\n        throw new Error(`Failed to read file in workstream ${workstream}: ${error}`);\n    }\n}\nasync function writeWorkstreamFile(workstream, content, ...pathSegments) {\n    const filePath = getWorkstreamDataPath(workstream, ...pathSegments);\n    try {\n        // Ensure directory exists\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.mkdir(path__WEBPACK_IMPORTED_MODULE_1___default().dirname(filePath), {\n            recursive: true\n        });\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.writeFile(filePath, content, \"utf-8\");\n    } catch (error) {\n        throw new Error(`Failed to write file in workstream ${workstream}: ${error}`);\n    }\n}\nasync function listWorkstreamFiles(workstream, ...pathSegments) {\n    const dirPath = getWorkstreamDataPath(workstream, ...pathSegments);\n    try {\n        const files = await fs__WEBPACK_IMPORTED_MODULE_2__.promises.readdir(dirPath);\n        return files.filter((file)=>!file.startsWith(\".\"));\n    } catch (error) {\n        // Return empty array if directory doesn't exist\n        return [];\n    }\n}\n// API Response helpers\nfunction createWorkstreamResponse(data, workstreamContext, status = 200) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ...data,\n        _meta: {\n            workstream: workstreamContext.workstream,\n            workstreamConfig: workstreamContext.config,\n            timestamp: new Date().toISOString(),\n            source: workstreamContext.source\n        }\n    }, {\n        status\n    });\n}\nfunction createWorkstreamErrorResponse(message, workstreamContext, status = 400) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: message,\n        workstream: workstreamContext?.workstream,\n        timestamp: new Date().toISOString()\n    }, {\n        status\n    });\n}\nfunction validateWorkstreamRequest(data, requiredFields = []) {\n    const errors = [];\n    // Check required fields\n    for (const field of requiredFields){\n        if (!data[field]) {\n            errors.push(`Missing required field: ${field}`);\n        }\n    }\n    // Validate workstream if provided\n    if (data.workstream && !isValidWorkstream(data.workstream)) {\n        errors.push(`Invalid workstream: ${data.workstream}`);\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\nasync function logWorkstreamOperation(log) {\n    const logEntry = {\n        ...log,\n        timestamp: new Date().toISOString()\n    };\n    try {\n        const logPath = getWorkstreamLogsPath(log.workstream);\n        const logFile = path__WEBPACK_IMPORTED_MODULE_1___default().join(logPath, `audit-${new Date().toISOString().split(\"T\")[0]}.json`);\n        // Ensure logs directory exists\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.mkdir(logPath, {\n            recursive: true\n        });\n        // Append to daily log file\n        let existingLogs = [];\n        try {\n            const existingContent = await fs__WEBPACK_IMPORTED_MODULE_2__.promises.readFile(logFile, \"utf-8\");\n            existingLogs = JSON.parse(existingContent);\n        } catch  {\n        // File doesn't exist yet, start with empty array\n        }\n        existingLogs.push(logEntry);\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.writeFile(logFile, JSON.stringify(existingLogs, null, 2));\n    } catch (error) {\n        console.error(\"[Audit Log] Failed to log operation:\", error);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    withWorkstreamContext,\n    extractWorkstreamContext,\n    createWorkstreamResponse,\n    createWorkstreamErrorResponse,\n    validateWorkstreamRequest,\n    getWorkstreamDataPath,\n    getWorkstreamArtefactsPath,\n    getWorkstreamRoadmapPath,\n    readWorkstreamFile,\n    writeWorkstreamFile,\n    listWorkstreamFiles,\n    logWorkstreamOperation,\n    WORKSTREAM_REGISTRY,\n    isValidWorkstream,\n    hasWorkstreamPermission\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/workstream-api.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faudit-logs%2Froute&page=%2Fapi%2Faudit-logs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faudit-logs%2Froute.ts&appDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fair%2FProjects%2Fora-system%2Fsrc%2Fui%2Freact-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();
"use strict";(()=>{var e={};e.id=744,e.ids=[744],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},2048:e=>{e.exports=require("fs")},629:e=>{e.exports=require("fs/promises")},5315:e=>{e.exports=require("path")},9573:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>D,patchFetch:()=>j,requestAsyncStorage:()=>E,routeModule:()=>w,serverHooks:()=>S,staticGenerationAsyncStorage:()=>y});var a={};r.r(a),r.d(a,{GET:()=>h,POST:()=>$});var n=r(9303),o=r(8716),i=r(3131),s=r(7070),c=r(629),u=r.n(c),l=r(5315),p=r.n(l),m=r(4027);let d=p().resolve(process.cwd(),"../../.."),g=p().join(d,"runtime");function f(e,t){switch(e){case"workstream":return p().join(g,"workstreams",t.name,"chat.md");case"program":return p().join(g,"workstreams",t.workstream,"programs",t.program,"chat.md");case"project":return p().join(g,"workstreams",t.workstream,"programs",t.program,"projects",t.project,"chat.md");case"task":return p().join(g,"loops",`${t.id}.md`);default:throw Error(`Invalid chat scope: ${e}`)}}async function h(e){let{searchParams:t}=new URL(e.url),r=t.get("scope"),a=Object.fromEntries(t.entries());if(!r)return s.NextResponse.json({message:"Missing scope parameter"},{status:400});try{let e=f(r,a),t=await u().readFile(e,"utf-8"),n=function(e,t){if("task"===t){let t=e.match(/## ðŸ’¬ Chat\n([\s\S]*)/);e=t?t[1]:""}let r=[];for(let t of e.split("- timestamp:").slice(1)){let e=t.match(/(.*?)\n/),a=t.match(/speaker: (user|ora)/),n=t.match(/message: ([\s\S]*)/);e&&a&&n&&r.push({timestamp:e[1].trim(),speaker:a[1],message:n[1].trim()})}return r}(t,r);return s.NextResponse.json(n)}catch(e){if(e instanceof Error&&"ENOENT"===e.code)return s.NextResponse.json([]);return console.error("Failed to get chat:",e),s.NextResponse.json({message:`Failed to get chat for ${r}`},{status:500})}}async function $(e){let{scope:t,params:r,message:a}=await e.json();if(!t||!r||!a)return s.NextResponse.json({message:"Missing required parameters"},{status:400});let n={timestamp:new Date().toISOString(),...a};try{let e=f(t,r),a=`
- timestamp: ${n.timestamp}
  speaker: ${n.speaker}
  message: ${n.message}
`;return"task"===t?await m.n.appendToSection(e,"## \uD83D\uDCAC Chat",a,r.id):(await u().mkdir(p().dirname(e),{recursive:!0}),await u().appendFile(e,a,"utf-8")),s.NextResponse.json(n,{status:201})}catch(e){return console.error("Failed to post chat message:",e),s.NextResponse.json({message:`Failed to post chat for ${t}`},{status:500})}}let w=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/chat/route",pathname:"/api/chat",filename:"route",bundlePath:"app/api/chat/route"},resolvedPagePath:"/Users/air/Projects/ora-system/src/ui/react-app/app/api/chat/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:E,staticGenerationAsyncStorage:y,serverHooks:S}=w,D="/api/chat/route";function j(){return(0,i.patchFetch)({serverHooks:S,staticGenerationAsyncStorage:y})}},4027:(e,t,r)=>{r.d(t,{n:()=>w});var a=r(629),n=r.n(a),o=r(5315),i=r.n(o),s=r(9744),c=r.n(s),u=r(6314);let l=["## Purpose","## âœ… Objectives","## \uD83D\uDD27 Tasks","## \uD83E\uDDFE Execution Log","## \uD83E\uDDE0 Memory Trace"],p=i().resolve(__dirname,"../../"),m=i().join(p,"runtime","logs","mutation-log.json"),d=i().join(p,"runtime","logs","mutation-errors.json");async function g(e){let t=await n().readFile(e,"utf-8");return c()(t,u.G)}async function f(e,t){let r=c().stringify(t.content,t.data);await n().writeFile(e,r,"utf-8")}async function h(e){let t={timestamp:new Date().toISOString(),...e},r=[];try{let e=await n().readFile(m,"utf-8");r=JSON.parse(e)}catch(e){}r.push(t);try{await n().mkdir(i().dirname(m),{recursive:!0}),await n().writeFile(m,JSON.stringify(r,null,2),"utf-8")}catch(e){console.log("Mutation logged (file logging failed):",t)}}async function $(e){let t={timestamp:new Date().toISOString(),...e},r=[];try{let e=await n().readFile(d,"utf-8");r=JSON.parse(e)}catch(e){}r.push(t);try{await n().mkdir(i().dirname(d),{recursive:!0}),await n().writeFile(d,JSON.stringify(r,null,2),"utf-8")}catch(e){console.error("Error logged (file logging failed):",t)}}let w={async patchFrontmatter(e,t,r){let a=await g(e);a.data,a.data={...a.data,...t},await f(e,a),await h({filePath:e,mutationType:"PATCH_FRONTMATTER",summary:`Updated frontmatter. Changes: ${JSON.stringify(t)}`,loopOrTaskUuid:r})},async appendToSection(e,t,r,a){let n=await g(e);if(RegExp(`(^${t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),!n.content.includes(t))throw Error(`Validation Error: Section "${t}" not found in ${e}.`);n.content=n.content.replace(t,`${t}
${r}`),await f(e,n),await h({filePath:e,mutationType:"APPEND_TO_SECTION",summary:`Appended content to section "${t}".`,loopOrTaskUuid:a})},async replaceInSection(e,t,r,a,n){let o=await g(e),i=RegExp(`(^${t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),s=o.content.match(i);if(!s){let r=Error(`Validation Error: Section "${t}" not found in ${e}.`);throw await $({filePath:e,mutationType:"REPLACE_IN_SECTION",error:r.message,loopOrTaskUuid:n}),r}let c=s[0],u=c.replace(r,a);c!==u&&(o.content=o.content.replace(c,u),await f(e,o),await h({filePath:e,mutationType:"REPLACE_IN_SECTION",summary:`Replaced content in section "${t}".`,loopOrTaskUuid:n}))},async appendToLog(e,t){let r=await g(e),a="## \uD83E\uDDFE Execution Log";if(!r.content.includes(a))throw Error(`Validation Error: Section "${a}" not found in ${e}.`);let n=`- ${t.timestamp}: ${"ora"===t.actor?"\uD83E\uDD16":"\uD83D\uDC64"} ${t.action}`,o=RegExp(`(${a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),i=r.content.match(o);if(!i)throw Error(`Validation Error: Section "${a}" malformed in ${e}.`);let s=i[0],c=s.endsWith("\n")?`${s}${n}
`:`${s}
${n}
`;r.content=r.content.replace(s,c),await f(e,r),await h({filePath:e,mutationType:"APPEND_TO_LOG",summary:`Appended log entry: ${t.action}`})},async validateMarkdownSchema(e,t=l){let r;try{r=await n().readFile(e,"utf-8")}catch(t){throw Error(`Validation Error: File not found or unreadable at ${e}`)}let a=[],o={};for(let e of t){let t=RegExp(`^${e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}`,"gm"),n=r.match(t),i=n?n.length:0;o[e]=i,0===i?a.push(`Missing required section: "${e}"`):i>1&&a.push(`Duplicated section: "${e}" (found ${i} times)`)}for(let e of r.match(/^## .+$/gm)||[])if(t.includes(e)){let t=RegExp(`(^${e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}[\\s\\S]*?)(?=\\n## |$)`,"m"),a=r.match(t);a&&(a[0].trim(),e.trim())}if(a.length>0)throw Error(`Validation Error in ${e}:
${a.join("\n")}`)},async dryRunMutation(e,t){let r,a;try{r=await n().readFile(e,"utf-8")}catch(t){throw Error(`Dry Run Error: Cannot read file at ${e}`)}try{a=t(r)}catch(e){throw Error(`Dry Run Error: Mutation function failed: ${e}`)}let o=r===a?void 0:"Content changed";return{preImage:r,postImage:a,diff:o}}}},6314:(e,t,r)=>{r.d(t,{G:()=>n});var a=r(3366);let n={engines:{yaml:{parse:e=>a.ZP.load(e,{schema:a.ZP.JSON_SCHEMA}),stringify:e=>a.ZP.dump(e)}}}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,972,366,127],()=>r(9573));module.exports=a})();